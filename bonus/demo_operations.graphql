query taskList {
  taskFindMany(sort:UPDATED_DATE_DESC) {
    id
    title
    parentIds
  }
}

mutation taskRemove {
  taskRemove(id:"IEADMUW4KQPBJ2AJ") {
    id
    title
    description
  }
}

mutation taskUpdate {
  taskUpdate(id: "IEADMUW4KQOE33NJ", task: { title: "How-To Guide: Personal Space 123" }) {
    id
    title
  }
}

mutation taskAddParents {
  taskAddParents(id: "IEADMUW4KQOE33NJ", parents: "IEADMUW4I4OE37IV") {
    id
    title
    parentIds
  }
}

mutation taskRemoveParents {
  taskRemoveParents(id: "IEADMUW4KQOE33NJ", parents: "IEADMUW4I4OE37IV") {
    id
    title
    parentIds
  }
}

query contacts {
  #contactFindMany(filter: { metadata: { key: "a", value: "123" } }) {
  contactFindMany {
    id
    firstName
    lastName
    metadata {
      key
      value
    }
    profiles {
      accountId
      email
      role
      external
    }
  }
}

query contacts2 {
  contactByIds(ids: ["KX73NL7C", "KUAHNM4I"]) {
    id
    firstName
    lastName
    metadata {
      key
      value
    }
  }
}

mutation contactUpdate {
  contactUpdate(id: "KX73NL7C", metadata: [{ key: "a", value:"123" }]) {
    id
    firstName
    lastName
    metadata {
      key
      value
    }
  }
}

mutation userUpdate {
  userUpdate(id:"KUAHNM4I", profile: {
    accountId: "IEADMUW4"
    role: User
    external: false
  }) {
    lastName
    firstName
    profiles {
      email
      external
    }
  }
}

query groupFindMany {
  groupFindMany(filter: { metadata: { key: "a" }}) {
    id
    title
    myTeam
    metadata {
      key
      value
    }
  }
}

query groupById {
  groupById(id: "KX73NL7C") {
    id
    title
    myTeam
    metadata {
      key
      value
    }
  }
}

mutation groupCreate {
  groupCreate(group: {
    title: "GraphQL group",
    
    metadata: [
      { key: "a", value: "2345" },
      { key: "b", value: "ok" }
    ],
  }) {
    id
    title
    myTeam
    metadata {
      key
      value
    }
  }
}

query getAccountData {
  account {
    id
    name
    dateFormat
    firstDayOfWeek
    workDays
    rootFolderId
    recycleBinId
    createdDate
    subscription {
      type
      suspended
      paid
      userLimit
    }
    metadata {
      key
      value
    }
    customFields {
      id
      accountId
      title
      type
      sharedIds
    }
    joinedDate
  }
}

mutation setAccountMeta {
  accountSetMetadata(metadata: [
    { key: "aa", value: "111"},
    { key: "bb", value: "222"}
  ]) {
    id
    name
    metadata {
      key
      value
    }
  }
}

query getFolders {
  folderFindMany(filter: {
    descendants: false
    
  }) {
    id
    title
    color
    childIds
    scope
    
    project {
      authorId
      ownerIds
      status
      customStatusId
      startDate
      endDate
      createdDate
      completedDate
      contractType
    }
    space
    metadata {
      key
      value
    }
    hasAttachments
    attachmentCount
    description
    briefDescription
    customFields {
      id
      title
    }
    customColumnIds
    superParentIds
    # contractType
  }
}

query FolderList {
  folderFindMany {
    id
    title
    superParentIds
    
  }
}

mutation createFolder {
  folderCreate(
    parentFolderId: "IEADMUW4I4OE37IV"
    folder: {
      title: "Test subfolder",
      description: "Descrription",
    }
  ) {
    id
    title
    description
  }
}

mutation updateFolder {
  folderUpdate(folderId: "IEADMUW4I4PGZ4WI", folder: {
    title: "Test subfolder1234"
  }) {
    id
    title
  }
}

mutation deleteFolder {
  folderRemove(id: "IEADMUW4I4PGZ4WI") {
    id
    title
  }
}

query CommentList {
  commentFindMany(filter: {
    taskId: "IEADMUW4KQOE4AVG"
  }) {
    id
    authorId
    text
    createdDate
    taskId
    folderId
  }
}

query CommentByID {
  commentByIds(ids: ["IEADMUW4IMBMTNBS"]) {
    id
    authorId
    text
    createdDate
  }
}

mutation createComment {
  commentCreateForTask(
    taskId: "IEADMUW4KQOE4AVG"
    comment: {
      text: "Comment from <b>GraphQL</b>",
    }
  ) {
    id
    text
    createdDate
    authorId   
  }
}

mutation updateComment {
  commentUpdate(
    id: "IEADMUW4IMBMTNGJ"
    comment: {
      text: "Comment from <b>GraphQL!!!!!</b>",
    }
  ) {
    id
    text
    createdDate
    authorId   
  }
}

mutation removeComment {
  commentRemove(id: "IEADMUW4IMBMTNKZ") {
    id
    title
  }
}

query getData {
  contactFindMany {
    id
    firstName
    lastName
  }
  taskFindMany(limit: 100) {
    id
    title
  }
}

mutation createApproval {
  approvalCreateForTask(
    taskId: "IEADMUW4KQOE4ATL",
    approval: {
      
      description: "Test approval",
      approvers: ["KUAHMNRA", "KUAHNM4I"],
    }
  ) {
    id
    authorId
    title
    description
    decisions {
      approverId
      comment
      status
      updatedDate
    }
  }
}

query getTasks {
  taskFindMany(limit: 2) {
    id
    title
    account {
      dateFormat
      customFields {
        title
      }
    }
    authors {
      firstName
      lastName
      workSchedule {
        workweek
        scheduleType
        title
      }
    }
  }
}