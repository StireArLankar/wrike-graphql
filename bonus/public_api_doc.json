{
  "entities": [
    {
      "name": "Contacts",
      "details": null,
      "methodGroups": [
        {
          "name": "Query Contacts",
          "methods": [
            {
              "id": "GET:/contacts/empty",
              "httpMethod": "GET",
              "path": "/contacts",
              "comment": "List contacts of all users and user groups in current account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model0",
              "responseModelRef": "model1"
            },
            {
              "id": "GET:/contacts/multi",
              "httpMethod": "GET",
              "path": "/contacts/{contactId},{contactId},... - up to 100 IDs",
              "comment": "List contacts of specified users and user groups.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model2",
              "responseModelRef": "model1"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Modify Contact",
          "methods": [
            {
              "id": "PUT:/contacts/single",
              "httpMethod": "PUT",
              "path": "/contacts/{contactId}",
              "comment": "Update contact of requesting user by ID (use \u0027Modify User\u0027 method to update other users). Account Admins may use this method to update group info by group ID. .",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model3",
              "responseModelRef": "model1"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Users",
      "details": null,
      "methodGroups": [
        {
          "name": "Query User",
          "methods": [
            {
              "id": "GET:/users/single",
              "httpMethod": "GET",
              "path": "/users/{userId}",
              "comment": "Returns information about single user.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model1"
            }
          ],
          "scopes": [
            "amReadOnlyUser",
            "amReadWriteUser"
          ]
        },
        {
          "name": "Modify User",
          "methods": [
            {
              "id": "PUT:/users/single",
              "httpMethod": "PUT",
              "path": "/users/{userId}",
              "comment": "Update users by ID (accessible to Admins only).",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model4",
              "responseModelRef": "model1"
            }
          ],
          "scopes": [
            "amReadWriteUser"
          ]
        }
      ]
    },
    {
      "name": "Groups",
      "details": null,
      "methodGroups": [
        {
          "name": "Query Groups",
          "methods": [
            {
              "id": "GET:/groups/single",
              "httpMethod": "GET",
              "path": "/groups/{groupId}",
              "comment": "Returns complete information about single group.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model5",
              "responseModelRef": "model6"
            },
            {
              "id": "GET:/groups/empty",
              "httpMethod": "GET",
              "path": "/groups",
              "comment": "Returns all groups in the account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model7",
              "responseModelRef": "model6"
            }
          ],
          "scopes": [
            "amReadOnlyGroup",
            "amReadWriteGroup"
          ]
        },
        {
          "name": "Create Groups",
          "methods": [
            {
              "id": "POST:/groups/empty",
              "httpMethod": "POST",
              "path": "/groups",
              "comment": "Create group in account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model8",
              "responseModelRef": "model6"
            }
          ],
          "scopes": [
            "amReadWriteGroup"
          ]
        },
        {
          "name": "Modify Groups",
          "methods": [
            {
              "id": "PUT:/groups/single",
              "httpMethod": "PUT",
              "path": "/groups/{groupId}",
              "comment": "Update group by id.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model9",
              "responseModelRef": "model6"
            }
          ],
          "scopes": [
            "amReadWriteGroup"
          ]
        },
        {
          "name": "Delete Groups",
          "methods": [
            {
              "id": "DELETE:/groups/single",
              "httpMethod": "DELETE",
              "path": "/groups/{groupId}",
              "comment": "Delete group by Id.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model10",
              "responseModelRef": "model6"
            }
          ],
          "scopes": [
            "amReadWriteGroup"
          ]
        }
      ]
    },
    {
      "name": "Invitations",
      "details": null,
      "methodGroups": [
        {
          "name": "Query Invitations",
          "methods": [
            {
              "id": "GET:/invitations/empty",
              "httpMethod": "GET",
              "path": "/invitations",
              "comment": "Get all invitations for current account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model11"
            }
          ],
          "scopes": [
            "amReadOnlyInvitation",
            "amReadWriteInvitation"
          ]
        },
        {
          "name": "Create Invitation",
          "methods": [
            {
              "id": "POST:/invitations/empty",
              "httpMethod": "POST",
              "path": "/invitations",
              "comment": "Create an invitation into the current account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model12",
              "responseModelRef": "model11"
            }
          ],
          "scopes": [
            "amReadWriteInvitation"
          ]
        },
        {
          "name": "Update Invitation",
          "methods": [
            {
              "id": "PUT:/invitations/single",
              "httpMethod": "PUT",
              "path": "/invitations/{invitationId}",
              "comment": "Update invitation by ID and/or resend invitation.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model13",
              "responseModelRef": "model11"
            }
          ],
          "scopes": [
            "amReadWriteInvitation"
          ]
        },
        {
          "name": "Delete Invitation",
          "methods": [
            {
              "id": "DELETE:/invitations/single",
              "httpMethod": "DELETE",
              "path": "/invitations/{invitationId}",
              "comment": "Delete invitation by ID.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model11"
            }
          ],
          "scopes": [
            "amReadWriteInvitation"
          ]
        }
      ]
    },
    {
      "name": "Account",
      "details": null,
      "methodGroups": [
        {
          "name": "Query Accounts",
          "methods": [
            {
              "id": "GET:/account/empty",
              "httpMethod": "GET",
              "path": "/account",
              "comment": "Returns current account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model14",
              "responseModelRef": "model15"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Modify Account",
          "methods": [
            {
              "id": "PUT:/account/empty",
              "httpMethod": "PUT",
              "path": "/account",
              "comment": "Update current account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model3",
              "responseModelRef": "model15"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Workflows",
      "details": null,
      "methodGroups": [
        {
          "name": "Query Workflows",
          "methods": [
            {
              "id": "GET:/workflows/empty",
              "httpMethod": "GET",
              "path": "/workflows",
              "comment": "Returns list of workflows with custom statuses.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model16"
            }
          ],
          "scopes": [
            "Default",
            "amReadOnlyWorkflow",
            "amReadWriteWorkflow",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Create Workflow",
          "methods": [
            {
              "id": "POST:/workflows/empty",
              "httpMethod": "POST",
              "path": "/workflows",
              "comment": "Create workflow in account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model17",
              "responseModelRef": "model16"
            }
          ],
          "scopes": [
            "amReadWriteWorkflow"
          ]
        },
        {
          "name": "Modify Workflow",
          "methods": [
            {
              "id": "PUT:/workflows/single",
              "httpMethod": "PUT",
              "path": "/workflows/{workflowId}",
              "comment": "Update workflow or custom statuses.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model18",
              "responseModelRef": "model16"
            }
          ],
          "scopes": [
            "amReadWriteWorkflow"
          ]
        }
      ]
    },
    {
      "name": "Custom Fields",
      "details": null,
      "methodGroups": [
        {
          "name": "Query Custom Fields",
          "methods": [
            {
              "id": "GET:/customfields/empty",
              "httpMethod": "GET",
              "path": "/customfields",
              "comment": "Returns a list of custom fields in current account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model19"
            },
            {
              "id": "GET:/customfields/multi",
              "httpMethod": "GET",
              "path": "/customfields/{customfieldId},{customfieldId},... - up to 100 IDs",
              "comment": "Returns complete information about specified custom fields.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model19"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Create Custom Field",
          "methods": [
            {
              "id": "POST:/customfields/empty",
              "httpMethod": "POST",
              "path": "/customfields",
              "comment": "Create custom field in specified account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model20",
              "responseModelRef": "model19"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Modify Custom Field",
          "methods": [
            {
              "id": "PUT:/customfields/single",
              "httpMethod": "PUT",
              "path": "/customfields/{customfieldId}",
              "comment": "Modify custom field.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model21",
              "responseModelRef": "model19"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Folders \u0026 Projects",
      "details": "Folders \u0026 projects are one of the main ways to organize, manage, and report on work within Wrike. They both show up in the folder tree in the left-hand Navigation panel of the Wrike Workspace. From the perspective of our data model, projects are essentially folders with additional properties (owners, start \u0026 end dates, and status). For instance, the Modify Tasks method allows you to include a task in a specified folder by passing the folder ID in the corresponding parameter. In the same way, you can pass a project ID to include a task in a project.In order to maintain data integrity, it is not possible to run more than one operations in parallel.",
      "methodGroups": [
        {
          "name": "Get Folder Tree",
          "methods": [
            {
              "id": "GET:/folders/empty",
              "httpMethod": "GET",
              "path": "/folders",
              "comment": "Returns list of entries required to build a folder tree for the current account. This list contains the virtual root and recycle bin folders for the account, which can be used as root nodes for trees. Note: when any of query filter parameters are present (e.g. descendants\u003dfalse, metadata) response is switched to Folder model.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model22",
              "responseModelRef": "model23"
            },
            {
              "id": "GET:/folders/single/folders",
              "httpMethod": "GET",
              "path": "/folders/{folderId}/folders",
              "comment": "Returns a list of tree entries for subtree of this folder. For root and recycle bin folders, returns folder subtrees of root and recycle bin respectively.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model24",
              "responseModelRef": "model23"
            },
            {
              "id": "GET:/spaces/single/folders",
              "httpMethod": "GET",
              "path": "/spaces/{spaceId}/folders",
              "comment": "Returns list of entries for subtree of this space.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model22",
              "responseModelRef": "model23"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Get Folder",
          "methods": [
            {
              "id": "GET:/folders/multi",
              "httpMethod": "GET",
              "path": "/folders/{folderId},{folderId},... - up to 100 IDs",
              "comment": "Returns complete information about specified folders.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model25",
              "responseModelRef": "model26"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Create Folder",
          "methods": [
            {
              "id": "POST:/folders/single/folders",
              "httpMethod": "POST",
              "path": "/folders/{folderId}/folders",
              "comment": "Create a folder within a folder. Specify virtual rootFolderId in order to create a folder in the account root.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model27",
              "responseModelRef": "model26"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Copy Folder",
          "methods": [
            {
              "id": "POST:/copy_folder/single",
              "httpMethod": "POST",
              "path": "/copy_folder/{folderId}",
              "comment": "Copy folder subtree, returns parent folder subtree.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model28",
              "responseModelRef": "model26"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Copy Folder async",
          "methods": [
            {
              "id": "POST:/copy_folder_async/single",
              "httpMethod": "POST",
              "path": "/copy_folder_async/{folderId}",
              "comment": "Copy folder subtree, returns async job.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model28",
              "responseModelRef": "model29"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Modify Folder",
          "methods": [
            {
              "id": "PUT:/folders/single",
              "httpMethod": "PUT",
              "path": "/folders/{folderId}",
              "comment": "Update folder.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model30",
              "responseModelRef": "model26"
            },
            {
              "id": "PUT:/folders/multi",
              "httpMethod": "PUT",
              "path": "/folders/{folderId},{folderId},... - up to 100 IDs",
              "comment": "Update folders.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model31",
              "responseModelRef": "model26"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Delete Folder",
          "methods": [
            {
              "id": "DELETE:/folders/single",
              "httpMethod": "DELETE",
              "path": "/folders/{folderId}",
              "comment": "Move folder and all descendant folders and tasks to Recycle Bin unless they have parents outside of deletion scope.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model26"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Tasks",
      "details": null,
      "methodGroups": [
        {
          "name": "Query Tasks",
          "methods": [
            {
              "id": "GET:/tasks/empty",
              "httpMethod": "GET",
              "path": "/tasks",
              "comment": "Search among all tasks in current account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model32",
              "responseModelRef": "model33"
            },
            {
              "id": "GET:/folders/single/tasks",
              "httpMethod": "GET",
              "path": "/folders/{folderId}/tasks",
              "comment": "Search among tasks in the folder.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model32",
              "responseModelRef": "model33"
            },
            {
              "id": "GET:/spaces/single/tasks",
              "httpMethod": "GET",
              "path": "/spaces/{spaceId}/tasks",
              "comment": "Search among tasks in space.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model32",
              "responseModelRef": "model33"
            },
            {
              "id": "GET:/tasks/multi",
              "httpMethod": "GET",
              "path": "/tasks/{taskId},{taskId},... - up to 100 IDs",
              "comment": "Returns complete information about single or multiple tasks.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model34",
              "responseModelRef": "model33"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Create Task",
          "methods": [
            {
              "id": "POST:/folders/single/tasks",
              "httpMethod": "POST",
              "path": "/folders/{folderId}/tasks",
              "comment": "Create task in folder. You can specify rootFolderId to create task in user\u0027s account root.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model35",
              "responseModelRef": "model33"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Modify Tasks",
          "methods": [
            {
              "id": "PUT:/tasks/single",
              "httpMethod": "PUT",
              "path": "/tasks/{taskId}",
              "comment": "Update task.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model36",
              "responseModelRef": "model33"
            },
            {
              "id": "PUT:/tasks/multi",
              "httpMethod": "PUT",
              "path": "/tasks/{taskId},{taskId},... - up to 100 IDs",
              "comment": "Update tasks.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model37",
              "responseModelRef": "model33"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Delete Tasks",
          "methods": [
            {
              "id": "DELETE:/tasks/single",
              "httpMethod": "DELETE",
              "path": "/tasks/{taskId}",
              "comment": "Delete task by Id.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model33"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Comments",
      "details": null,
      "methodGroups": [
        {
          "name": "Get Comments",
          "methods": [
            {
              "id": "GET:/comments/empty",
              "httpMethod": "GET",
              "path": "/comments",
              "comment": "Get all comments in current account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model38",
              "responseModelRef": "model39"
            },
            {
              "id": "GET:/folders/single/comments",
              "httpMethod": "GET",
              "path": "/folders/{folderId}/comments",
              "comment": "Get folder comments.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model40",
              "responseModelRef": "model39"
            },
            {
              "id": "GET:/tasks/single/comments",
              "httpMethod": "GET",
              "path": "/tasks/{taskId}/comments",
              "comment": "Get task comments.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model40",
              "responseModelRef": "model39"
            },
            {
              "id": "GET:/comments/multi",
              "httpMethod": "GET",
              "path": "/comments/{commentId},{commentId},... - up to 100 IDs",
              "comment": "Get single or multiple comments by their IDs.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model40",
              "responseModelRef": "model39"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Create Comment",
          "methods": [
            {
              "id": "POST:/folders/single/comments",
              "httpMethod": "POST",
              "path": "/folders/{folderId}/comments",
              "comment": "Create a comment in the folder. The virtual Root and Recycle Bin folders cannot have comments.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model41",
              "responseModelRef": "model39"
            },
            {
              "id": "POST:/tasks/single/comments",
              "httpMethod": "POST",
              "path": "/tasks/{taskId}/comments",
              "comment": "Create comment in task.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model41",
              "responseModelRef": "model39"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Update Comment",
          "methods": [
            {
              "id": "PUT:/comments/single",
              "httpMethod": "PUT",
              "path": "/comments/{commentId}",
              "comment": "Update Comment by ID. A comment is available for updates only during the 5 minutes after creation.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model42",
              "responseModelRef": "model39"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Delete Comment",
          "methods": [
            {
              "id": "DELETE:/comments/single",
              "httpMethod": "DELETE",
              "path": "/comments/{commentId}",
              "comment": "Delete comment by ID.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": null
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Dependencies",
      "details": null,
      "methodGroups": [
        {
          "name": "Query Dependencies",
          "methods": [
            {
              "id": "GET:/tasks/single/dependencies",
              "httpMethod": "GET",
              "path": "/tasks/{taskId}/dependencies",
              "comment": "Get task dependencies.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model43"
            },
            {
              "id": "GET:/dependencies/multi",
              "httpMethod": "GET",
              "path": "/dependencies/{dependencyId},{dependencyId},... - up to 100 IDs",
              "comment": "Returns complete information about single or multiple dependencies.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model43"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Create Dependency",
          "methods": [
            {
              "id": "POST:/tasks/single/dependencies",
              "httpMethod": "POST",
              "path": "/tasks/{taskId}/dependencies",
              "comment": "Add dependency between tasks.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model44",
              "responseModelRef": "model43"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Modify Dependency",
          "methods": [
            {
              "id": "PUT:/dependencies/single",
              "httpMethod": "PUT",
              "path": "/dependencies/{dependencyId}",
              "comment": "Change relationType of task dependency.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model45",
              "responseModelRef": "model43"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Delete Dependency",
          "methods": [
            {
              "id": "DELETE:/dependencies/single",
              "httpMethod": "DELETE",
              "path": "/dependencies/{dependencyId}",
              "comment": "Delete dependency between tasks.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model43"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Timelogs",
      "details": null,
      "methodGroups": [
        {
          "name": "Query Timelogs",
          "methods": [
            {
              "id": "GET:/timelogs/empty",
              "httpMethod": "GET",
              "path": "/timelogs",
              "comment": "Get all timelog records in current account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model46",
              "responseModelRef": "model47"
            },
            {
              "id": "GET:/contacts/single/timelogs",
              "httpMethod": "GET",
              "path": "/contacts/{contactId}/timelogs",
              "comment": "Get all timelog records that were created by the user.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model46",
              "responseModelRef": "model47"
            },
            {
              "id": "GET:/folders/single/timelogs",
              "httpMethod": "GET",
              "path": "/folders/{folderId}/timelogs",
              "comment": "Get all timelog records for a folder.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model46",
              "responseModelRef": "model47"
            },
            {
              "id": "GET:/tasks/single/timelogs",
              "httpMethod": "GET",
              "path": "/tasks/{taskId}/timelogs",
              "comment": "Get all timelog records for a task.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model46",
              "responseModelRef": "model47"
            },
            {
              "id": "GET:/timelog_categories/single/timelogs",
              "httpMethod": "GET",
              "path": "/timelog_categories/{timelog_categoryId}/timelogs",
              "comment": "Get all timelog records with specific timelog category.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model46",
              "responseModelRef": "model47"
            },
            {
              "id": "GET:/timelogs/multi",
              "httpMethod": "GET",
              "path": "/timelogs/{timelogId},{timelogId},... - up to 100 IDs",
              "comment": "Get timelog record by IDs.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model48",
              "responseModelRef": "model47"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Create Timelog",
          "methods": [
            {
              "id": "POST:/tasks/single/timelogs",
              "httpMethod": "POST",
              "path": "/tasks/{taskId}/timelogs",
              "comment": "Create timelog record for task.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model49",
              "responseModelRef": "model47"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Modify Timelog",
          "methods": [
            {
              "id": "PUT:/timelogs/single",
              "httpMethod": "PUT",
              "path": "/timelogs/{timelogId}",
              "comment": "Update timelog by Id.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model50",
              "responseModelRef": "model47"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Delete Timelog",
          "methods": [
            {
              "id": "DELETE:/timelogs/single",
              "httpMethod": "DELETE",
              "path": "/timelogs/{timelogId}",
              "comment": "Delete Timelog record by ID.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": null
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Timelog categories",
      "details": null,
      "methodGroups": [
        {
          "name": "Query Timelog categories",
          "methods": [
            {
              "id": "GET:/timelog_categories/empty",
              "httpMethod": "GET",
              "path": "/timelog_categories",
              "comment": "Get timelog categories in account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model51"
            }
          ],
          "scopes": [
            "Default",
            "amReadOnlyTimelogCategory",
            "amReadWriteTimelogCategory",
            "wsReadOnly",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Attachments",
      "details": null,
      "methodGroups": [
        {
          "name": "Get Attachments",
          "methods": [
            {
              "id": "GET:/attachments/empty",
              "httpMethod": "GET",
              "path": "/attachments",
              "comment": "Return all Attachments of account tasks and folders.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model52",
              "responseModelRef": "model53"
            },
            {
              "id": "GET:/folders/single/attachments",
              "httpMethod": "GET",
              "path": "/folders/{folderId}/attachments",
              "comment": "Returns all Attachments of a folder.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model52",
              "responseModelRef": "model53"
            },
            {
              "id": "GET:/tasks/single/attachments",
              "httpMethod": "GET",
              "path": "/tasks/{taskId}/attachments",
              "comment": "Returns all Attachments of a task.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model52",
              "responseModelRef": "model53"
            },
            {
              "id": "GET:/attachments/multi",
              "httpMethod": "GET",
              "path": "/attachments/{attachmentId},{attachmentId},... - up to 100 IDs",
              "comment": "Returns complete information about multiple attachments.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model54",
              "responseModelRef": "model53"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Download Wrike Attachment",
          "methods": [
            {
              "id": "GET:/attachments/single/download",
              "httpMethod": "GET",
              "path": "/attachments/{attachmentId}/download",
              "comment": "Returns attachment content. It can be accessed via /attachments/id/download/name.ext URL. In this case, \u0027name.ext\u0027 will be returned as the file name.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": null
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Download Attachment Preview",
          "methods": [
            {
              "id": "GET:/attachments/single/preview",
              "httpMethod": "GET",
              "path": "/attachments/{attachmentId}/preview",
              "comment": "Returns Preview for the attachment. The preview can be accessed via /attachments/id/preview/name.ext URL. In this case, \u0027name.ext\u0027 will be returned as the file name.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model55",
              "responseModelRef": null
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Get Access URL for Attachment",
          "methods": [
            {
              "id": "GET:/attachments/single/url",
              "httpMethod": "GET",
              "path": "/attachments/{attachmentId}/url",
              "comment": "Public URL to an attachment from Wrike or an external service. The link for attachment from Wrike is valid for 24 hours from when you make the request.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model56"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Create Wrike Attachment",
          "methods": [
            {
              "id": "POST:/folders/single/attachments",
              "httpMethod": "POST",
              "path": "/folders/{folderId}/attachments",
              "comment": "Add an attachment to a folder.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model53"
            },
            {
              "id": "POST:/tasks/single/attachments",
              "httpMethod": "POST",
              "path": "/tasks/{taskId}/attachments",
              "comment": "Add an attachment to a task.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model53"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Update Attachment",
          "methods": [
            {
              "id": "PUT:/attachments/single",
              "httpMethod": "PUT",
              "path": "/attachments/{attachmentId}",
              "comment": "Update previously uploaded Attachment with new version.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model57",
              "responseModelRef": "model53"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Delete Attachment",
          "methods": [
            {
              "id": "DELETE:/attachments/single",
              "httpMethod": "DELETE",
              "path": "/attachments/{attachmentId}",
              "comment": "Delete Attachment by ID.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": null
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Version",
      "details": null,
      "methodGroups": [
        {
          "name": "API Version",
          "methods": [
            {
              "id": "GET:/version/empty",
              "httpMethod": "GET",
              "path": "/version",
              "comment": "Returns current API version info.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model58"
            }
          ],
          "scopes": null
        }
      ]
    },
    {
      "name": "IDs",
      "details": null,
      "methodGroups": [
        {
          "name": "Legacy API v2 IDs converter",
          "methods": [
            {
              "id": "GET:/ids/empty",
              "httpMethod": "GET",
              "path": "/ids",
              "comment": "Convert APIv2 legacy IDs to APIv3 (compatible with APIv4) format for specific entity type.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model59",
              "responseModelRef": "model60"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Colors",
      "details": null,
      "methodGroups": [
        {
          "name": "Query Colors",
          "methods": [
            {
              "id": "GET:/colors/empty",
              "httpMethod": "GET",
              "path": "/colors",
              "comment": "Get color name - code mapping.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model61"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Spaces",
      "details": null,
      "methodGroups": [
        {
          "name": "Get Spaces",
          "methods": [
            {
              "id": "GET:/spaces/empty",
              "httpMethod": "GET",
              "path": "/spaces",
              "comment": "Returns a list of spaces.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model62",
              "responseModelRef": "model63"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Get Space",
          "methods": [
            {
              "id": "GET:/spaces/single",
              "httpMethod": "GET",
              "path": "/spaces/{spaceId}",
              "comment": "Returns info about Space.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model64",
              "responseModelRef": "model63"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Create Space",
          "methods": [
            {
              "id": "POST:/spaces/empty",
              "httpMethod": "POST",
              "path": "/spaces",
              "comment": "Create space.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model65",
              "responseModelRef": "model63"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Update Space",
          "methods": [
            {
              "id": "PUT:/spaces/single",
              "httpMethod": "PUT",
              "path": "/spaces/{spaceId}",
              "comment": "Update space.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model66",
              "responseModelRef": "model63"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Data Export",
      "details": "Data Export API allows you to export all account data for future import to third-party analytics tools (e.g. Tableau or PowerBI). The data is stored in tables, which are connected using foreign key identifiers (like in a relational database). Each table is stored as a separate \u003ca href\u003d\"https://en.wikipedia.org/wiki/Comma-separated_values\"\u003e.csv\u003c/a\u003e file, and the API returns a link for each file.\u003cbr\u003e\nThe CSV file links require authorization similar to all other API methods.\u003cbr\u003e\n\u003cbr\u003e\nDocumentation for Data Export schema and tables can be found \u003ca href\u003d\"https://developers.wrike.com/export-data\"\u003ehere\u003c/a\u003e.\u003cbr\u003e\n\u003cbr\u003e\nData Export takes time to be generated. If it’s the first time you generate a Data Export, a 202 response code is returned and generation starts automatically, so you can access your Export later. After the first time, the Export is automatically updated every day, and a new Export is available through API.\u003cbr\u003e\n\u003cbr\u003e\nThe API is available to account owners and admins on Enterprise plan with the right to “Export account data”.",
      "methodGroups": [
        {
          "name": "Get Data Export",
          "methods": [
            {
              "id": "GET:/data_export/empty",
              "httpMethod": "GET",
              "path": "/data_export",
              "comment": "Get last completed Data Export.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model67"
            },
            {
              "id": "GET:/data_export/single",
              "httpMethod": "GET",
              "path": "/data_export/{data_exportId}",
              "comment": "Get Data Export specified by id.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model67"
            }
          ],
          "scopes": [
            "dataExportFull"
          ]
        },
        {
          "name": "Refresh Data Export",
          "methods": [
            {
              "id": "POST:/data_export/empty",
              "httpMethod": "POST",
              "path": "/data_export",
              "comment": "Forces new data export generation (if it is not in progress already). 202 code is returned in case new export generation is started. Data export can be requested no sooner than 1 hour after last successful data export. If there is fresh data export already, 200 code and latest export in format similar to [GET] /data_export is returned.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model67"
            }
          ],
          "scopes": [
            "dataExportFull"
          ]
        },
        {
          "name": "Get Data Export Schema",
          "methods": [
            {
              "id": "GET:/data_export_schema/empty",
              "httpMethod": "GET",
              "path": "/data_export_schema",
              "comment": "Get data export schema specified by version.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model68",
              "responseModelRef": "model69"
            }
          ],
          "scopes": [
            "dataExportFull"
          ]
        }
      ]
    },
    {
      "name": "Audit Log",
      "details": null,
      "methodGroups": [
        {
          "name": "Get Audit Log",
          "methods": [
            {
              "id": "GET:/audit_log/empty",
              "httpMethod": "GET",
              "path": "/audit_log",
              "comment": "Get \u003ca href\u003d\"https://help.wrike.com/hc/en-us/articles/209606309-Audit-Log-Reports\"\u003eAudit Log Reports\u003c/a\u003e, that contains audit trail for actions in the account. Available to Enterprise admins with \"Create user activity reports\" right.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model70",
              "responseModelRef": "model71"
            }
          ],
          "scopes": [
            "amReadOnlyAuditLog"
          ]
        }
      ]
    },
    {
      "name": "Access Roles",
      "details": null,
      "methodGroups": [
        {
          "name": "Get Access Roles",
          "methods": [
            {
              "id": "GET:/access_roles/empty",
              "httpMethod": "GET",
              "path": "/access_roles",
              "comment": "Access roles.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model72"
            }
          ],
          "scopes": [
            "amReadOnlyAccessRole"
          ]
        }
      ]
    },
    {
      "name": "Async job",
      "details": null,
      "methodGroups": [
        {
          "name": "Get async job",
          "methods": [
            {
              "id": "GET:/async_job/single",
              "httpMethod": "GET",
              "path": "/async_job/{async_jobId}",
              "comment": "Get Async job specified by id.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model29"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Approvals",
      "details": null,
      "methodGroups": [
        {
          "name": "Get approvals",
          "methods": [
            {
              "id": "GET:/approvals/empty",
              "httpMethod": "GET",
              "path": "/approvals",
              "comment": "Reads approvals by filter. When no filter parameters passed returns all approvals shared with a user.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model73",
              "responseModelRef": "model74"
            },
            {
              "id": "GET:/folders/single/approvals",
              "httpMethod": "GET",
              "path": "/folders/{folderId}/approvals",
              "comment": "Reads all approvals on folder/project.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model74"
            },
            {
              "id": "GET:/tasks/single/approvals",
              "httpMethod": "GET",
              "path": "/tasks/{taskId}/approvals",
              "comment": "Reads all approvals on task.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model74"
            },
            {
              "id": "GET:/approvals/multi",
              "httpMethod": "GET",
              "path": "/approvals/{approvalId},{approvalId},... - up to 100 IDs",
              "comment": "Reads approvals by ids.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model74"
            }
          ],
          "scopes": [
            "Default",
            "wsReadOnly",
            "wsReadWrite"
          ]
        },
        {
          "name": "Create approval",
          "methods": [
            {
              "id": "POST:/folders/single/approvals",
              "httpMethod": "POST",
              "path": "/folders/{folderId}/approvals",
              "comment": "Create an approval for folder/project. Creates approval in draft status when no approvers assigned. Otherwise creates in pending status. Approvals created via API will not be affected by workflow automation, e.g. task status will not be automatically transitioned when approval finishes.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model75",
              "responseModelRef": "model74"
            },
            {
              "id": "POST:/tasks/single/approvals",
              "httpMethod": "POST",
              "path": "/tasks/{taskId}/approvals",
              "comment": "Create an approval for task. Creates approval in draft status when no approvers assigned. Otherwise creates in pending status. Approvals created via API will not be affected by workflow automation, e.g. task status will not be automatically transitioned when approval finishes.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model75",
              "responseModelRef": "model74"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Update approval",
          "methods": [
            {
              "id": "PUT:/approvals/single",
              "httpMethod": "PUT",
              "path": "/approvals/{approvalId}",
              "comment": "Update approval.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model76",
              "responseModelRef": "model74"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        },
        {
          "name": "Cancel approval",
          "methods": [
            {
              "id": "DELETE:/approvals/single",
              "httpMethod": "DELETE",
              "path": "/approvals/{approvalId}",
              "comment": "Cancel approval.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model74"
            }
          ],
          "scopes": [
            "Default",
            "wsReadWrite"
          ]
        }
      ]
    },
    {
      "name": "Work Schedules",
      "details": null,
      "methodGroups": [
        {
          "name": "Query Work Schedules",
          "methods": [
            {
              "id": "GET:/workschedules/empty",
              "httpMethod": "GET",
              "path": "/workschedules",
              "comment": "Returns list of all work schedules in account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model77",
              "responseModelRef": "model78"
            },
            {
              "id": "GET:/workschedules/single",
              "httpMethod": "GET",
              "path": "/workschedules/{workscheduleId}",
              "comment": "Get work schedule by Id.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model77",
              "responseModelRef": "model78"
            }
          ],
          "scopes": [
            "amReadOnlyWorkSchedule",
            "amReadWriteWorkSchedule"
          ]
        },
        {
          "name": "Create Work Schedule",
          "methods": [
            {
              "id": "POST:/workschedules/empty",
              "httpMethod": "POST",
              "path": "/workschedules",
              "comment": "Create schedule in account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model79",
              "responseModelRef": "model78"
            }
          ],
          "scopes": [
            "amReadWriteWorkSchedule"
          ]
        },
        {
          "name": "Update Work Schedule",
          "methods": [
            {
              "id": "PUT:/workschedules/single",
              "httpMethod": "PUT",
              "path": "/workschedules/{workscheduleId}",
              "comment": "Create work schedule in account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model80",
              "responseModelRef": "model78"
            }
          ],
          "scopes": [
            "amReadWriteWorkSchedule"
          ]
        },
        {
          "name": "Delete Work Schedule",
          "methods": [
            {
              "id": "DELETE:/workschedules/single",
              "httpMethod": "DELETE",
              "path": "/workschedules/{workscheduleId}",
              "comment": "Delete work schedule from account.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model78"
            }
          ],
          "scopes": [
            "amReadWriteWorkSchedule"
          ]
        }
      ]
    },
    {
      "name": "Work Schedule exceptions",
      "details": null,
      "methodGroups": [
        {
          "name": "Query Work Schedule exceptions",
          "methods": [
            {
              "id": "GET:/workschedule_exclusions/single",
              "httpMethod": "GET",
              "path": "/workschedule_exclusions/{workschedule_exclusionId}",
              "comment": "Get exception by Id.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model81"
            },
            {
              "id": "GET:/workschedules/single/workschedule_exclusions",
              "httpMethod": "GET",
              "path": "/workschedules/{workscheduleId}/workschedule_exclusions",
              "comment": "Get all exceptions for given schedule.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model82",
              "responseModelRef": "model81"
            }
          ],
          "scopes": [
            "amReadOnlyWorkSchedule",
            "amReadWriteWorkSchedule"
          ]
        },
        {
          "name": "Create Work Schedule exception",
          "methods": [
            {
              "id": "POST:/workschedules/single/workschedule_exclusions",
              "httpMethod": "POST",
              "path": "/workschedules/{workscheduleId}/workschedule_exclusions",
              "comment": "Create exception for given schedule.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model83",
              "responseModelRef": "model81"
            }
          ],
          "scopes": [
            "amReadWriteWorkSchedule"
          ]
        },
        {
          "name": "Update Work Schedule exception",
          "methods": [
            {
              "id": "PUT:/workschedule_exclusions/single",
              "httpMethod": "PUT",
              "path": "/workschedule_exclusions/{workschedule_exclusionId}",
              "comment": "Update exception by Id.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model84",
              "responseModelRef": "model81"
            }
          ],
          "scopes": [
            "amReadWriteWorkSchedule"
          ]
        },
        {
          "name": "Delete Work Schedule exception",
          "methods": [
            {
              "id": "DELETE:/workschedule_exclusions/single",
              "httpMethod": "DELETE",
              "path": "/workschedule_exclusions/{workschedule_exclusionId}",
              "comment": "Delete exception by id.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model81"
            }
          ],
          "scopes": [
            "amReadWriteWorkSchedule"
          ]
        }
      ]
    },
    {
      "name": "User Schedule exceptions",
      "details": null,
      "methodGroups": [
        {
          "name": "Query User Schedule exception",
          "methods": [
            {
              "id": "GET:/user_schedule_exclusions/empty",
              "httpMethod": "GET",
              "path": "/user_schedule_exclusions",
              "comment": "Get exceptions for given users and date range.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model85",
              "responseModelRef": "model86"
            },
            {
              "id": "GET:/user_schedule_exclusions/single",
              "httpMethod": "GET",
              "path": "/user_schedule_exclusions/{user_schedule_exclusionId}",
              "comment": "Get exception by Id.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model86"
            }
          ],
          "scopes": [
            "amReadOnlyWorkSchedule",
            "amReadWriteWorkSchedule"
          ]
        },
        {
          "name": "Create User Schedule exception",
          "methods": [
            {
              "id": "POST:/user_schedule_exclusions/empty",
              "httpMethod": "POST",
              "path": "/user_schedule_exclusions",
              "comment": "Create new exception for given user.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model87",
              "responseModelRef": "model86"
            }
          ],
          "scopes": [
            "amReadWriteWorkSchedule"
          ]
        },
        {
          "name": "Update User Schedule exception",
          "methods": [
            {
              "id": "PUT:/user_schedule_exclusions/single",
              "httpMethod": "PUT",
              "path": "/user_schedule_exclusions/{user_schedule_exclusionId}",
              "comment": "Update exception for given user.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": "model88",
              "responseModelRef": "model86"
            }
          ],
          "scopes": [
            "amReadWriteWorkSchedule"
          ]
        },
        {
          "name": "Delete User Schedule exception",
          "methods": [
            {
              "id": "DELETE:/user_schedule_exclusions/single",
              "httpMethod": "DELETE",
              "path": "/user_schedule_exclusions/{user_schedule_exclusionId}",
              "comment": "Delete exception.",
              "beta": false,
              "enterprise": false,
              "requestModelRef": null,
              "responseModelRef": "model86"
            }
          ],
          "scopes": [
            "amReadWriteWorkSchedule"
          ]
        }
      ]
    }
  ],
  "models": [
    {
      "model89": {
        "name": "Metadata entry key-value pair",
        "details": "Metadata entries are isolated on per-client (application) basis",
        "params": [
          {
            "name": "key",
            "type": "string",
            "subtype": null,
            "description": "Key should be less than 50 symbols and match following regular expression ([A-Za-z0-9_-]+)",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "value",
            "type": "string",
            "subtype": null,
            "description": "Value should be less than 1000 symbols, compatible with JSON string. Use JSON \u0027null\u0027 in order to remove metadata entry",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model0": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "me",
            "type": "optional boolean",
            "subtype": null,
            "description": "If present - only contact info of requesting user is returned",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "metadata",
            "type": "object",
            "subtype": null,
            "description": "Metadata filter, exact match for metadata key or key-value pair",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "deleted",
            "type": "boolean",
            "subtype": null,
            "description": "Deleted flag filter",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: metadata, workScheduleId",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "metadata",
                "description": "Contact metadata"
              },
              {
                "value": "workScheduleId",
                "description": "Contact work schedule id"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model90": {
        "name": "User profile",
        "details": null,
        "params": [
          {
            "name": "accountId",
            "type": "string",
            "subtype": "Account ID",
            "description": null,
            "comment": "Account ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "email",
            "type": "string",
            "subtype": null,
            "description": "Email address associated with account",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "role",
            "type": "string",
            "subtype": null,
            "description": "Role in account",
            "comment": "UserRole, Enum: User, Collaborator",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "external",
            "type": "boolean",
            "subtype": null,
            "description": "Is user external",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "admin",
            "type": "boolean",
            "subtype": null,
            "description": "Is user account admin",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "owner",
            "type": "boolean",
            "subtype": null,
            "description": "Is user account owner",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model1": {
        "name": "Contact",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Contact ID",
            "description": null,
            "comment": "Contact ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "firstName",
            "type": "string",
            "subtype": null,
            "description": "First name",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "lastName",
            "type": "string",
            "subtype": null,
            "description": "Last name",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "type",
            "type": "string",
            "subtype": null,
            "description": "Type of the user",
            "comment": "UserType, Enum: Person, Group",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Person",
                "description": "Person"
              },
              {
                "value": "Group",
                "description": "Group of users. Group userId can be used in folder/task sharing requests only. It has no effect in other operations"
              }
            ],
            "modelRef": null
          },
          {
            "name": "profiles",
            "type": "array",
            "subtype": null,
            "description": "List of user profiles in accounts accessible for requesting user",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model90"
          },
          {
            "name": "avatarUrl",
            "type": "string",
            "subtype": null,
            "description": "Avatar URL",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "timezone",
            "type": "string",
            "subtype": null,
            "description": "Timezone Id, e.g \u0027America/New_York\u0027",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "locale",
            "type": "string",
            "subtype": null,
            "description": "Locale",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "deleted",
            "type": "boolean",
            "subtype": null,
            "description": "True if user is deleted, false otherwise",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "me",
            "type": "boolean",
            "subtype": null,
            "description": "Field is present and set to true only for requesting user",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "memberIds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "List of group members contact IDs (field is present only for groups)",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "metadata",
            "type": "array",
            "subtype": null,
            "description": "List of contact metadata entries. Requesting user has read/write access to his own metadata, other entries are read-only",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "myTeam",
            "type": "boolean",
            "subtype": null,
            "description": "Field is present and set to true for My Team (default) group",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "User Title",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "companyName",
            "type": "string",
            "subtype": null,
            "description": "User Company Name",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "phone",
            "type": "string",
            "subtype": null,
            "description": "User phone",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "location",
            "type": "string",
            "subtype": null,
            "description": "User location",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "workScheduleId",
            "type": "string",
            "subtype": "WorkSchedule ID",
            "description": "Id of work schedule assigned to user or default one",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model2": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "metadata",
            "type": "object",
            "subtype": null,
            "description": "Metadata filter, exact match for metadata key or key-value pair",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: metadata, workScheduleId",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "metadata",
                "description": "Contact metadata"
              },
              {
                "value": "workScheduleId",
                "description": "Contact work schedule id"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model3": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "metadata",
            "type": "array",
            "subtype": null,
            "description": "Metadata to be updated",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          }
        ]
      }
    },
    {
      "model91": {
        "name": "User Profile",
        "details": null,
        "params": [
          {
            "name": "accountId",
            "type": "string",
            "subtype": "Account ID",
            "description": null,
            "comment": "Account ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "role",
            "type": "string",
            "subtype": null,
            "description": "Role in account",
            "comment": "UserRole, Enum: User, Collaborator",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "external",
            "type": "boolean",
            "subtype": null,
            "description": "Make user external",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model4": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "profile",
            "type": "object",
            "subtype": null,
            "description": "Profile to be updated",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model91"
          }
        ]
      }
    },
    {
      "model5": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: metadata",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "metadata",
                "description": "Group metadata entries"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model6": {
        "name": "Group",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Contact ID",
            "description": null,
            "comment": "Contact ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "accountId",
            "type": "string",
            "subtype": "Account ID",
            "description": null,
            "comment": "Account ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Group title",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "memberIds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "List of group members user IDs",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "childIds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "List of child group IDs",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "parentIds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "List of parent group IDs",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "avatarUrl",
            "type": "string",
            "subtype": null,
            "description": "Avatar URL",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "myTeam",
            "type": "boolean",
            "subtype": null,
            "description": "Field is present and set to true for My Team (default) group",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "metadata",
            "type": "array",
            "subtype": null,
            "description": "List of group metadata entries",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          }
        ]
      }
    },
    {
      "model7": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "metadata",
            "type": "object",
            "subtype": null,
            "description": "Metadata filter, exact match for metadata key or key-value pair",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: metadata",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "metadata",
                "description": "Group metadata"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model92": {
        "name": "Group avatar",
        "details": null,
        "params": [
          {
            "name": "letters",
            "type": "string",
            "subtype": null,
            "description": "Group letters (2 symbols max)",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "color",
            "type": "string",
            "subtype": null,
            "description": "Hex color code",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model8": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title of group, required",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "members",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Group users",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "parent",
            "type": "string",
            "subtype": "Contact ID",
            "description": "Parent group",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "avatar",
            "type": "object",
            "subtype": null,
            "description": "Info for group avatar creation",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model92"
          },
          {
            "name": "metadata",
            "type": "array",
            "subtype": null,
            "description": "Metadata to be added to newly created group",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          }
        ]
      }
    },
    {
      "model9": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title of group",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "addMembers",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Add specified users to group",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "removeMembers",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Remove specified users from group",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "parent",
            "type": "string",
            "subtype": "Contact ID",
            "description": "Parent group",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "avatar",
            "type": "object",
            "subtype": null,
            "description": "Info for group avatar creation",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model92"
          },
          {
            "name": "metadata",
            "type": "array",
            "subtype": null,
            "description": "Metadata to be updated",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          }
        ]
      }
    },
    {
      "model10": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "test",
            "type": "optional boolean",
            "subtype": null,
            "description": "Check that group can be removed",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model11": {
        "name": "Invitation",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Invitation ID",
            "description": null,
            "comment": "Invitation ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "accountId",
            "type": "string",
            "subtype": "Account ID",
            "description": null,
            "comment": "Account ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "firstName",
            "type": "string",
            "subtype": null,
            "description": "First Name",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "lastName",
            "type": "string",
            "subtype": null,
            "description": "LastName",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "email",
            "type": "string",
            "subtype": null,
            "description": "Email",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "status",
            "type": "string",
            "subtype": null,
            "description": "Status",
            "comment": "Invitation status, Enum: Pending, Accepted, Declined, Cancelled",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "inviterUserId",
            "type": "string",
            "subtype": "Contact ID",
            "description": "Inviter Contact ID",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "invitationDate",
            "type": "string",
            "subtype": null,
            "description": "Date when invitation was created",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "resolvedDate",
            "type": "string",
            "subtype": null,
            "description": "Date when the invitation was resolved",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "role",
            "type": "string",
            "subtype": null,
            "description": "Invited user role",
            "comment": "UserRole, Enum: User, Collaborator",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "external",
            "type": "boolean",
            "subtype": null,
            "description": "Is user external",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model12": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "email",
            "type": "string",
            "subtype": null,
            "description": "Create an invitation for current email",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "firstName",
            "type": "string",
            "subtype": null,
            "description": "First name of invited user",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "lastName",
            "type": "string",
            "subtype": null,
            "description": "Last name of invited user",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "role",
            "type": "string",
            "subtype": null,
            "description": "Set user role in account",
            "comment": "UserRole, Enum: User, Collaborator",
            "optional": true,
            "optionalDefault": "User",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "external",
            "type": "boolean",
            "subtype": null,
            "description": "Set external flag for invited user. Flag \u0027External\u0027 can be applied only to the role \u0027User\u0027",
            "comment": null,
            "optional": true,
            "optionalDefault": "false",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "subject",
            "type": "string",
            "subtype": null,
            "description": "Custom message subject. Not available for free accounts",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "message",
            "type": "string",
            "subtype": null,
            "description": "Custom message body. Not available for free accounts",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model13": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "resend",
            "type": "boolean",
            "subtype": null,
            "description": "Resend invitation",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "role",
            "type": "string",
            "subtype": null,
            "description": "Change role of user in account for pending invitation",
            "comment": "UserRole, Enum: User, Collaborator",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "external",
            "type": "boolean",
            "subtype": null,
            "description": "Change external flag for pending invitation. Flag \u0027External\u0027 can be applied only to the role \u0027User\u0027",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model14": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "metadata",
            "type": "object",
            "subtype": null,
            "description": "Metadata filter, exact match for metadata key or key-value pair",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: subscription, metadata, customFields",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "subscription",
                "description": "Account subscription"
              },
              {
                "value": "metadata",
                "description": "Account metadata"
              },
              {
                "value": "customFields",
                "description": "Account custom fields"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model93": {
        "name": "Details about account subscription",
        "details": null,
        "params": [
          {
            "name": "type",
            "type": "string",
            "subtype": null,
            "description": "Subscription type",
            "comment": "Enum: Free, Premium, Business, CreativeBusiness, Enterprise, CreativeEnterprise",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "suspended",
            "type": "boolean",
            "subtype": null,
            "description": "Account is suspended",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "paid",
            "type": "boolean",
            "subtype": null,
            "description": "Subscription is paid (available only to account admins)",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "userLimit",
            "type": "number",
            "subtype": null,
            "description": "Limit of subscription users (available only to account admins)",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model94": {
        "name": "Custom field settings",
        "details": null,
        "params": [
          {
            "name": "inheritanceType",
            "type": "string",
            "subtype": null,
            "description": "Inheritance type",
            "comment": "Custom field inheritance type, Enum: All, Folders, Projects",
            "optional": true,
            "optionalDefault": "All",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "decimalPlaces",
            "type": "number",
            "subtype": null,
            "description": "Decimal places (only for Numeric, Percentage and Currency types)",
            "comment": null,
            "optional": true,
            "optionalDefault": "2",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "useThousandsSeparator",
            "type": "boolean",
            "subtype": null,
            "description": "Use thousands separator (only for Numeric type)",
            "comment": null,
            "optional": true,
            "optionalDefault": "false",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "currency",
            "type": "string",
            "subtype": null,
            "description": "Currency (only for Currency type)",
            "comment": "Custom field currency, Enum: USD, EUR, GBP, RUB, BRL, AED, ARS, BYR, CAD, CLP, COP, CZK, DKK, HKD, HUF, INR, IDR, ILS, JPY, KRW, MYR, MXN, NZD, NOK, PEN, PHP, PLN, QAR, RON, SAR, SGD, ZAR, SEK, CHF, TWD, THB, TRY, UAH, VND, CNY, AUD, AMD, BWP",
            "optional": true,
            "optionalDefault": "USD",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "aggregation",
            "type": "string",
            "subtype": null,
            "description": "Aggregation type (only for Text, Numeric, Percentage, Currency, Duration, MultipleSelect and DropDown types)",
            "comment": "Custom field aggregation type, Enum: None, Sum, Average",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "values",
            "type": "array",
            "subtype": null,
            "description": "Dropdown values (only for DropDown and MultipleSelect type)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "allowOtherValues",
            "type": "boolean",
            "subtype": null,
            "description": "Allow users to input other values (only for DropDown type)",
            "comment": null,
            "optional": true,
            "optionalDefault": "true",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "contacts",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Allowed users or invitations (only for Users type)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model19": {
        "name": "Custom field description",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Custom Field ID",
            "description": null,
            "comment": "Custom Field ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "accountId",
            "type": "string",
            "subtype": "Account ID",
            "description": "Account ID",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Custom field title",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "type",
            "type": "string",
            "subtype": null,
            "description": "Custom field type",
            "comment": "Type of custom field, Enum: Text, DropDown, Numeric, Currency, Percentage, Date, Duration, Checkbox, Contacts, Multiple",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Text",
                "description": "String field, Comparable field"
              },
              {
                "value": "DropDown",
                "description": "String field, Comparable field"
              },
              {
                "value": "Numeric",
                "description": "Comparable field"
              },
              {
                "value": "Currency",
                "description": "Comparable field"
              },
              {
                "value": "Percentage",
                "description": "Comparable field"
              },
              {
                "value": "Date",
                "description": "Comparable field"
              },
              {
                "value": "Duration",
                "description": "Comparable field"
              },
              {
                "value": "Checkbox",
                "description": "Boolean field"
              },
              {
                "value": "Contacts",
                "description": "Collection field"
              },
              {
                "value": "Multiple",
                "description": "Collection field"
              }
            ],
            "modelRef": null
          },
          {
            "name": "sharedIds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "List of user IDs, who share the custom field",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "settings",
            "type": "object",
            "subtype": null,
            "description": "Custom field settings",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model94"
          }
        ]
      }
    },
    {
      "model15": {
        "name": "Account",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Account ID",
            "description": null,
            "comment": "Account ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "name",
            "type": "string",
            "subtype": null,
            "description": "Name of account",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "dateFormat",
            "type": "string",
            "subtype": null,
            "description": "Date format: dd/MM/yyyy or MM/dd/yyyy",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "firstDayOfWeek",
            "type": "string",
            "subtype": null,
            "description": "First day of week",
            "comment": "Week Day, Enum: Sat, Sun, Mon",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "workDays",
            "type": "array",
            "subtype": null,
            "description": "List of weekdays, not empty. These days are used in task duration computation",
            "comment": "Week Day, Enum: Sun, Mon, Tue, Wed, Thu, Fri, Sat",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "rootFolderId",
            "type": "string",
            "subtype": "Folder ID",
            "description": "Virtual folder, denotes the root folder of the account. Different users can have different elements in the root, according to their sharing scope. Can be used in queries to get all folders/tasks in the account, or to create folders/tasks in the user\u0027s account root",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "recycleBinId",
            "type": "string",
            "subtype": "Folder ID",
            "description": "Virtual folder, denotes the root for deleted folders and tasks. Can be used in queries to get all folders/tasks in the Recycle Bin. Cannot be used in modification queries.",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "createdDate",
            "type": "string",
            "subtype": null,
            "description": "Registration date",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "subscription",
            "type": "object",
            "subtype": null,
            "description": "Account subscription",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model93"
          },
          {
            "name": "metadata",
            "type": "array",
            "subtype": null,
            "description": "List of account metadata entries. Entries could be read by all users of account and modified by admins only",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "customFields",
            "type": "array",
            "subtype": null,
            "description": "List of custom fields accessible for requesting user in the account",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model19"
          },
          {
            "name": "joinedDate",
            "type": "string",
            "subtype": null,
            "description": "Date when the user has joined the account",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model95": {
        "name": "Custom status",
        "details": "ID and group cannot be set simultaneously in request parameter,\nbut ID is required for update, and group is required for insert",
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Custom status ID",
            "description": null,
            "comment": "Custom status ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "name",
            "type": "string",
            "subtype": null,
            "description": "Name (128 symbols max)",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "standardName",
            "type": "boolean",
            "subtype": null,
            "description": "Whether status name is default or not",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "color",
            "type": "string",
            "subtype": null,
            "description": "Color name",
            "comment": "Custom status color, Enum: Brown, Red, Purple, Indigo, DarkBlue, Blue, Turquoise, DarkCyan, Green, YellowGreen, Yellow, Orange, Gray",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Brown",
                "description": "#795548"
              },
              {
                "value": "Red",
                "description": "#E91E63"
              },
              {
                "value": "Purple",
                "description": "#9C27B0"
              },
              {
                "value": "Indigo",
                "description": "#673AB7"
              },
              {
                "value": "DarkBlue",
                "description": "#3F51B5"
              },
              {
                "value": "Blue",
                "description": "#2196F3"
              },
              {
                "value": "Turquoise",
                "description": "#00BCD4"
              },
              {
                "value": "DarkCyan",
                "description": "#009688"
              },
              {
                "value": "Green",
                "description": "#8BC34A"
              },
              {
                "value": "YellowGreen",
                "description": "#CDDC39"
              },
              {
                "value": "Yellow",
                "description": "#FFEB3B"
              },
              {
                "value": "Orange",
                "description": "#FF9800"
              },
              {
                "value": "Gray",
                "description": "#9E9E9E"
              }
            ],
            "modelRef": null
          },
          {
            "name": "standard",
            "type": "boolean",
            "subtype": null,
            "description": "Defines default custom status (ignored in requests)",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "group",
            "type": "string",
            "subtype": null,
            "description": "Custom status group",
            "comment": "Task Status, Enum: Active, Completed, Deferred, Cancelled",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "hidden",
            "type": "boolean",
            "subtype": null,
            "description": "Custom status is hidden",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model16": {
        "name": "Workflow",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Workflow ID",
            "description": null,
            "comment": "Workflow ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "name",
            "type": "string",
            "subtype": null,
            "description": "Name (128 symbols max)",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "standard",
            "type": "boolean",
            "subtype": null,
            "description": "Defines default workflow",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "hidden",
            "type": "boolean",
            "subtype": null,
            "description": "Workflow is hidden",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "customStatuses",
            "type": "array",
            "subtype": null,
            "description": "Custom statuses",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model95"
          }
        ]
      }
    },
    {
      "model17": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "name",
            "type": "string",
            "subtype": null,
            "description": "Name of workflow, required",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model18": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "name",
            "type": "string",
            "subtype": null,
            "description": "Name of workflow (128 symbols max)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "hidden",
            "type": "boolean",
            "subtype": null,
            "description": "Workflow is hidden",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "customStatus",
            "type": "object",
            "subtype": null,
            "description": "Custom status",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model20": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Custom field title",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "type",
            "type": "string",
            "subtype": null,
            "description": "Custom field type",
            "comment": "Type of custom field, Enum: Text, DropDown, Numeric, Currency, Percentage, Date, Duration, Checkbox, Contacts, Multiple",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Text",
                "description": "String field, Comparable field"
              },
              {
                "value": "DropDown",
                "description": "String field, Comparable field"
              },
              {
                "value": "Numeric",
                "description": "Comparable field"
              },
              {
                "value": "Currency",
                "description": "Comparable field"
              },
              {
                "value": "Percentage",
                "description": "Comparable field"
              },
              {
                "value": "Date",
                "description": "Comparable field"
              },
              {
                "value": "Duration",
                "description": "Comparable field"
              },
              {
                "value": "Checkbox",
                "description": "Boolean field"
              },
              {
                "value": "Contacts",
                "description": "Collection field"
              },
              {
                "value": "Multiple",
                "description": "Collection field"
              }
            ],
            "modelRef": null
          },
          {
            "name": "shareds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Users to share custom field with",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "settings",
            "type": "object",
            "subtype": null,
            "description": "Custom field settings",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model94"
          }
        ]
      }
    },
    {
      "model21": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Custom field title",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "type",
            "type": "string",
            "subtype": null,
            "description": "Custom field type",
            "comment": "Type of custom field, Enum: Text, DropDown, Numeric, Currency, Percentage, Date, Duration, Checkbox, Contacts, Multiple",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Text",
                "description": "String field, Comparable field"
              },
              {
                "value": "DropDown",
                "description": "String field, Comparable field"
              },
              {
                "value": "Numeric",
                "description": "Comparable field"
              },
              {
                "value": "Currency",
                "description": "Comparable field"
              },
              {
                "value": "Percentage",
                "description": "Comparable field"
              },
              {
                "value": "Date",
                "description": "Comparable field"
              },
              {
                "value": "Duration",
                "description": "Comparable field"
              },
              {
                "value": "Checkbox",
                "description": "Boolean field"
              },
              {
                "value": "Contacts",
                "description": "Collection field"
              },
              {
                "value": "Multiple",
                "description": "Collection field"
              }
            ],
            "modelRef": null
          },
          {
            "name": "addShareds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Share custom field with specified users",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "removeShareds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Unshare custom field from specified users",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "settings",
            "type": "object",
            "subtype": null,
            "description": "Custom field type settings",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model94"
          }
        ]
      }
    },
    {
      "model96": {
        "name": "Custom field filter",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Custom Field ID",
            "description": null,
            "comment": "Custom Field ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "comparator",
            "type": "string",
            "subtype": null,
            "description": "Custom field comparator. See list below for available comparators and field types they are applicable to. Available custom field types are listed in \u003ca href\u003d\"https://developers.wrike.com/documentation/api/methods/query-custom-fields\"\u003eQuery Custom Fields\u003c/a\u003e method.",
            "comment": "Enum: EqualTo, IsEmpty, IsNotEmpty, LessThan, LessOrEqualTo, GreaterThan, GreaterOrEqualTo, InRange, NotInRange, Contains, StartsWith, EndsWith, ContainsAll, ContainsAny",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "EqualTo",
                "description": "For all field types"
              },
              {
                "value": "IsEmpty",
                "description": "For all field types"
              },
              {
                "value": "IsNotEmpty",
                "description": "For all field types"
              },
              {
                "value": "LessThan",
                "description": "For comparable field types"
              },
              {
                "value": "LessOrEqualTo",
                "description": "For comparable field types"
              },
              {
                "value": "GreaterThan",
                "description": "For comparable field types"
              },
              {
                "value": "GreaterOrEqualTo",
                "description": "For comparable field types"
              },
              {
                "value": "InRange",
                "description": "For comparable field types"
              },
              {
                "value": "NotInRange",
                "description": "For comparable field types"
              },
              {
                "value": "Contains",
                "description": "For string field types"
              },
              {
                "value": "StartsWith",
                "description": "For string field types"
              },
              {
                "value": "EndsWith",
                "description": "For string field types"
              },
              {
                "value": "ContainsAll",
                "description": "For collection field types"
              },
              {
                "value": "ContainsAny",
                "description": "For collection field types"
              }
            ],
            "modelRef": null
          },
          {
            "name": "value",
            "type": "string",
            "subtype": null,
            "description": "Custom field value",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "minValue",
            "type": "string",
            "subtype": null,
            "description": "Custom field min value",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "maxValue",
            "type": "string",
            "subtype": null,
            "description": "Custom field max value",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "values",
            "type": "array",
            "subtype": null,
            "description": "Custom field possible values",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model97": {
        "name": "Timestamp semi-open interval",
        "details": null,
        "params": [
          {
            "name": "start",
            "type": "string",
            "subtype": null,
            "description": "Range start",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "end",
            "type": "string",
            "subtype": null,
            "description": "Range end",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model22": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "permalink",
            "type": "string",
            "subtype": null,
            "description": "Folder permalink, exact match",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "descendants",
            "type": "boolean",
            "subtype": null,
            "description": "Adds all descendant folders to search scope",
            "comment": null,
            "optional": true,
            "optionalDefault": "true",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "metadata",
            "type": "object",
            "subtype": null,
            "description": "Folders metadata filter",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "customField",
            "type": "object",
            "subtype": null,
            "description": "Custom field filter",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model96"
          },
          {
            "name": "updatedDate",
            "type": "object",
            "subtype": null,
            "description": "Updated date filter, range",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model97"
          },
          {
            "name": "project",
            "type": "boolean",
            "subtype": null,
            "description": "Get only projects (true) / only folders (false)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "deleted",
            "type": "boolean",
            "subtype": null,
            "description": "Get folders from Root (false) / Recycle Bin (true)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "contractTypes",
            "type": "string",
            "subtype": null,
            "description": "Contract type filter (Wrike Resource only)",
            "comment": "Project Contract Type (Wrike Resource only), Enum: Billable, NonBillable",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Billable",
                "description": "Billable"
              },
              {
                "value": "NonBillable",
                "description": "Non-Billable"
              }
            ],
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional Fields (for filtered requests only (Folder Model)), Enum: metadata, hasAttachments, attachmentCount, description, briefDescription, customFields, customColumnIds, superParentIds, space, contractType",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "metadata",
                "description": "Folder metadata entries"
              },
              {
                "value": "hasAttachments",
                "description": "Has attachments"
              },
              {
                "value": "attachmentCount",
                "description": "Attachment count"
              },
              {
                "value": "description",
                "description": "Description"
              },
              {
                "value": "briefDescription",
                "description": "Brief description"
              },
              {
                "value": "customFields",
                "description": "Custom fields"
              },
              {
                "value": "customColumnIds",
                "description": "Associated custom field IDs"
              },
              {
                "value": "superParentIds",
                "description": "List of super parent folder IDs (applicable to \u0027Selective Sharing\u0027 labs feature)"
              },
              {
                "value": "space",
                "description": "Is folder a space"
              },
              {
                "value": "contractType",
                "description": "Contract type"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model98": {
        "name": "Details about project contained in folder",
        "details": null,
        "params": [
          {
            "name": "authorId",
            "type": "string",
            "subtype": "Contact ID",
            "description": "ID of user who created project",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "ownerIds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "List of project owner IDs",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "status",
            "type": "string",
            "subtype": null,
            "description": "Project status",
            "comment": "Enum: Green, Yellow, Red, Completed, OnHold, Cancelled, Custom",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "customStatusId",
            "type": "string",
            "subtype": "Custom status ID",
            "description": "Custom status ID. Empty if status is not Custom",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "startDate",
            "type": "string",
            "subtype": null,
            "description": "Project start date",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "endDate",
            "type": "string",
            "subtype": null,
            "description": "Project end date",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "createdDate",
            "type": "string",
            "subtype": null,
            "description": "Project created date",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "completedDate",
            "type": "string",
            "subtype": null,
            "description": "Project completed date",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "contractType",
            "type": "string",
            "subtype": null,
            "description": "Contract type (Wrike Resource only)",
            "comment": "Project Contract Type (Wrike Resource only), Enum: Billable, NonBillable",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Billable",
                "description": "Billable"
              },
              {
                "value": "NonBillable",
                "description": "Non-Billable"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model23": {
        "name": "Folder Tree",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Folder ID",
            "description": null,
            "comment": "Folder ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "color",
            "type": "string",
            "subtype": null,
            "description": "Color",
            "comment": "Folder color, Enum: None, Person, Purple1, Purple2, Purple3, Purple4, Indigo1, Indigo2, Indigo3, Indigo4, DarkBlue1, DarkBlue2, DarkBlue3, DarkBlue4, Blue1, Blue2, Blue3, Blue4, Turquoise1, Turquoise2, Turquoise3, Turquoise4, DarkCyan1, DarkCyan2, DarkCyan3, DarkCyan4, Green1, Green2, Green3, Green4, YellowGreen1, YellowGreen2, YellowGreen3, YellowGreen4, Yellow1, Yellow2, Yellow3, Yellow4, Orange1, Orange2, Orange3, Orange4, Red1, Red2, Red3, Red4, Pink1, Pink2, Pink3, Pink4, Gray1, Gray2, Gray3",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "childIds",
            "type": "array",
            "subtype": "Folder ID",
            "description": "Child folder IDs",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "scope",
            "type": "string",
            "subtype": null,
            "description": "Folder scope",
            "comment": "Tree Scope, Enum: WsRoot, RbRoot, WsFolder, RbFolder, WsTask, RbTask",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "WsRoot",
                "description": "Virtual root folder of account"
              },
              {
                "value": "RbRoot",
                "description": "Virtual Recycle Bin folder of account"
              },
              {
                "value": "WsFolder",
                "description": "Folder in account"
              },
              {
                "value": "RbFolder",
                "description": "Folder is in Recycle Bin (deleted folder)"
              },
              {
                "value": "WsTask",
                "description": "Task in account"
              },
              {
                "value": "RbTask",
                "description": "Task is in Recycle Bin (deleted task)"
              }
            ],
            "modelRef": null
          },
          {
            "name": "project",
            "type": "object",
            "subtype": null,
            "description": "Project details, present only for project folders",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model98"
          },
          {
            "name": "space",
            "type": "boolean",
            "subtype": null,
            "description": "Is folder a space",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model24": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "permalink",
            "type": "string",
            "subtype": null,
            "description": "Folder permalink, exact match",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "descendants",
            "type": "boolean",
            "subtype": null,
            "description": "Adds all descendant folders to search scope",
            "comment": null,
            "optional": true,
            "optionalDefault": "true",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "metadata",
            "type": "object",
            "subtype": null,
            "description": "Folders metadata filter",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "customField",
            "type": "object",
            "subtype": null,
            "description": "Custom field filter",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model96"
          },
          {
            "name": "updatedDate",
            "type": "object",
            "subtype": null,
            "description": "Updated date filter, range",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model97"
          },
          {
            "name": "project",
            "type": "boolean",
            "subtype": null,
            "description": "Get only projects (true) / only folders (false)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "contractTypes",
            "type": "string",
            "subtype": null,
            "description": "Contract type filter (Wrike Resource only)",
            "comment": "Project Contract Type (Wrike Resource only), Enum: Billable, NonBillable",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Billable",
                "description": "Billable"
              },
              {
                "value": "NonBillable",
                "description": "Non-Billable"
              }
            ],
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional Fields (for filtered requests only (Folder Model)), Enum: metadata, hasAttachments, attachmentCount, description, briefDescription, customFields, customColumnIds, superParentIds, space, contractType",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "metadata",
                "description": "Folder metadata entries"
              },
              {
                "value": "hasAttachments",
                "description": "Has attachments"
              },
              {
                "value": "attachmentCount",
                "description": "Attachment count"
              },
              {
                "value": "description",
                "description": "Description"
              },
              {
                "value": "briefDescription",
                "description": "Brief description"
              },
              {
                "value": "customFields",
                "description": "Custom fields"
              },
              {
                "value": "customColumnIds",
                "description": "Associated custom field IDs"
              },
              {
                "value": "superParentIds",
                "description": "List of super parent folder IDs (applicable to \u0027Selective Sharing\u0027 labs feature)"
              },
              {
                "value": "space",
                "description": "Is folder a space"
              },
              {
                "value": "contractType",
                "description": "Contract type"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model25": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: briefDescription, customColumnIds, attachmentCount, contractType",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "briefDescription",
                "description": "Get brief description"
              },
              {
                "value": "customColumnIds",
                "description": "Associated custom field IDs"
              },
              {
                "value": "attachmentCount",
                "description": "Attachment count"
              },
              {
                "value": "contractType",
                "description": "Contract type"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model99": {
        "name": "Custom field",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Custom Field ID",
            "description": null,
            "comment": "Custom Field ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "value",
            "type": "string",
            "subtype": null,
            "description": "Custom field value. 2000 characters max",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model26": {
        "name": "Folder",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Folder ID",
            "description": null,
            "comment": "Folder ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "accountId",
            "type": "string",
            "subtype": "Account ID",
            "description": "Account ID",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "createdDate",
            "type": "string",
            "subtype": null,
            "description": "Created date",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "updatedDate",
            "type": "string",
            "subtype": null,
            "description": "Updated date",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "briefDescription",
            "type": "string",
            "subtype": null,
            "description": "Brief description",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "description",
            "type": "string",
            "subtype": null,
            "description": "Description",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "color",
            "type": "string",
            "subtype": null,
            "description": "Color",
            "comment": "Folder color, Enum: None, Person, Purple1, Purple2, Purple3, Purple4, Indigo1, Indigo2, Indigo3, Indigo4, DarkBlue1, DarkBlue2, DarkBlue3, DarkBlue4, Blue1, Blue2, Blue3, Blue4, Turquoise1, Turquoise2, Turquoise3, Turquoise4, DarkCyan1, DarkCyan2, DarkCyan3, DarkCyan4, Green1, Green2, Green3, Green4, YellowGreen1, YellowGreen2, YellowGreen3, YellowGreen4, Yellow1, Yellow2, Yellow3, Yellow4, Orange1, Orange2, Orange3, Orange4, Red1, Red2, Red3, Red4, Pink1, Pink2, Pink3, Pink4, Gray1, Gray2, Gray3",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "sharedIds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "List of user IDs, who share the folder",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "parentIds",
            "type": "array",
            "subtype": "Folder ID",
            "description": "List of parent folder IDs",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "childIds",
            "type": "array",
            "subtype": "Folder ID",
            "description": "List of child folder IDs",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "superParentIds",
            "type": "array",
            "subtype": "Folder ID",
            "description": "List of super parent folder IDs (applicable to \u0027Selective Sharing\u0027 labs feature)",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "scope",
            "type": "string",
            "subtype": null,
            "description": "Folder scope",
            "comment": "Tree Scope, Enum: WsRoot, RbRoot, WsFolder, RbFolder, WsTask, RbTask",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "WsRoot",
                "description": "Virtual root folder of account"
              },
              {
                "value": "RbRoot",
                "description": "Virtual Recycle Bin folder of account"
              },
              {
                "value": "WsFolder",
                "description": "Folder in account"
              },
              {
                "value": "RbFolder",
                "description": "Folder is in Recycle Bin (deleted folder)"
              },
              {
                "value": "WsTask",
                "description": "Task in account"
              },
              {
                "value": "RbTask",
                "description": "Task is in Recycle Bin (deleted task)"
              }
            ],
            "modelRef": null
          },
          {
            "name": "hasAttachments",
            "type": "boolean",
            "subtype": null,
            "description": "True if folder has attachments",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "attachmentCount",
            "type": "number",
            "subtype": null,
            "description": "Total count of folder attachments",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "permalink",
            "type": "string",
            "subtype": null,
            "description": "Link to open folder in web workspace, if user has appropriate access",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "workflowId",
            "type": "string",
            "subtype": "Workflow ID",
            "description": "Folder workflow ID",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "metadata",
            "type": "array",
            "subtype": null,
            "description": "List of folder metadata entries",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "customFields",
            "type": "array",
            "subtype": null,
            "description": "Custom fields",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model99"
          },
          {
            "name": "customColumnIds",
            "type": "array",
            "subtype": "Custom Field ID",
            "description": "Custom column IDs",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "project",
            "type": "object",
            "subtype": null,
            "description": "Project details, present only for project folders",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model98"
          }
        ]
      }
    },
    {
      "model100": {
        "name": "Projects details to create project",
        "details": null,
        "params": [
          {
            "name": "ownerIds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "List of project owner IDs",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "status",
            "type": "string",
            "subtype": null,
            "description": "Project status. Use this parameter to set status to one of these: Green, Yellow, Red, Completed, OnHold, Cancelled.",
            "comment": "Enum: Green, Yellow, Red, Completed, OnHold, Cancelled, Custom",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "customStatusId",
            "type": "string",
            "subtype": null,
            "description": "Project custom status ID. Use this parameter if status value is not one of specified above",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "startDate",
            "type": "string",
            "subtype": null,
            "description": "Project start date",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "endDate",
            "type": "string",
            "subtype": null,
            "description": "Project end date",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "contractType",
            "type": "string",
            "subtype": null,
            "description": "Contract type (Wrike Resource only)",
            "comment": "Project Contract Type (Wrike Resource only), Enum: Billable, NonBillable",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Billable",
                "description": "Billable"
              },
              {
                "value": "NonBillable",
                "description": "Non-Billable"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model27": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title, cannot be empty",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "description",
            "type": "string",
            "subtype": null,
            "description": "Folder description. If not specified, will be left blank",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "shareds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Users to share folder with. Folder is always shared with creator",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "metadata",
            "type": "array",
            "subtype": null,
            "description": "Metadata to be added to newly created folder",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "customFields",
            "type": "array",
            "subtype": null,
            "description": "List of custom fields to be set upon task creation",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model99"
          },
          {
            "name": "customColumns",
            "type": "array",
            "subtype": "Custom Field ID",
            "description": "List of custom fields associated with folder",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "project",
            "type": "object",
            "subtype": null,
            "description": "Project settings in order to create project",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model100"
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: contractType",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "contractType",
                "description": "Contract type"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model101": {
        "name": "Projects details to update project",
        "details": null,
        "params": [
          {
            "name": "ownersAdd",
            "type": "array",
            "subtype": "Contact ID",
            "description": "List of userIds to be added as owners",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "ownersRemove",
            "type": "array",
            "subtype": "Contact ID",
            "description": "List of userIds to be removed from owners",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "status",
            "type": "string",
            "subtype": null,
            "description": "Project status. Use this parameter to set status to one of these: Green, Yellow, Red, Completed, OnHold, Cancelled.",
            "comment": "Enum: Green, Yellow, Red, Completed, OnHold, Cancelled, Custom",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "customStatusId",
            "type": "string",
            "subtype": null,
            "description": "Project custom status ID. Use this parameter if status value is not one of specified above",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "startDate",
            "type": "string",
            "subtype": null,
            "description": "Project start date (null value to remove)",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "endDate",
            "type": "string",
            "subtype": null,
            "description": "Project end date (null value to remove)",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "contractType",
            "type": "string",
            "subtype": null,
            "description": "Contract type (Wrike Resource only)",
            "comment": "Project Contract Type (Wrike Resource only), Enum: Billable, NonBillable",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Billable",
                "description": "Billable"
              },
              {
                "value": "NonBillable",
                "description": "Non-Billable"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model30": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "description",
            "type": "string",
            "subtype": null,
            "description": "Folder description",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "addParents",
            "type": "array",
            "subtype": "Folder ID",
            "description": "Parent folders from same account to add, cannot contain rootFolderId and recycleBinId",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "removeParents",
            "type": "array",
            "subtype": "Folder ID",
            "description": "Parent folders from same account to remove, cannot contain rootFolderId and recycleBinId",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "addShareds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Share folder with specified users",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "removeShareds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Unshare folder from specified users",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "metadata",
            "type": "array",
            "subtype": null,
            "description": "Metadata to be updated",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "restore",
            "type": "boolean",
            "subtype": null,
            "description": "Restore folder from Recycled Bin",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "customFields",
            "type": "array",
            "subtype": null,
            "description": "Custom fields to be updated or deleted (null value removes field)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model99"
          },
          {
            "name": "customColumns",
            "type": "array",
            "subtype": "Custom Field ID",
            "description": "List of custom fields associated with folder",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "project",
            "type": "object",
            "subtype": null,
            "description": "Project settings (update project or convert folder to project). Use null value to convert project to folder",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model101"
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: contractType",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "contractType",
                "description": "Contract type"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model31": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "customFields",
            "type": "array",
            "subtype": null,
            "description": "Custom fields to be updated or deleted (null value removes field)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model99"
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: contractType",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "contractType",
                "description": "Contract type"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model102": {
        "name": "DateTime exact match or semi-open interval",
        "details": null,
        "params": [
          {
            "name": "start",
            "type": "string",
            "subtype": null,
            "description": "Range start",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss (\u0027T\u0027HH:mm:ss is optional)",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "equal",
            "type": "string",
            "subtype": null,
            "description": "Date exact match value",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss (\u0027T\u0027HH:mm:ss is optional)",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "end",
            "type": "string",
            "subtype": null,
            "description": "Range end",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss (\u0027T\u0027HH:mm:ss is optional)",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model103": {
        "name": "Date exact match or semi-open interval",
        "details": null,
        "params": [
          {
            "name": "start",
            "type": "string",
            "subtype": null,
            "description": "Range start",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "equal",
            "type": "string",
            "subtype": null,
            "description": "Date exact match value",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "end",
            "type": "string",
            "subtype": null,
            "description": "Range end",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model32": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "descendants",
            "type": "optional boolean",
            "subtype": null,
            "description": "Adds all descendant folders to search scope",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title filter, exact match",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "status",
            "type": "array",
            "subtype": null,
            "description": "Status filter, match with any of specified constants",
            "comment": "Task Status, Enum: Active, Completed, Deferred, Cancelled",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "importance",
            "type": "string",
            "subtype": null,
            "description": "Importance filter, exact match",
            "comment": "Task Importance, Enum: High, Normal, Low",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "startDate",
            "type": "object",
            "subtype": null,
            "description": "Start date filter, date match or range",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model102"
          },
          {
            "name": "dueDate",
            "type": "object",
            "subtype": null,
            "description": "Due date filter, date match or range",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model102"
          },
          {
            "name": "scheduledDate",
            "type": "object",
            "subtype": null,
            "description": "Scheduled date filter. Both dates should be set in ranged version.\nReturns all tasks that have schedule intersecting with specified interval, date match or range",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model103"
          },
          {
            "name": "createdDate",
            "type": "object",
            "subtype": null,
            "description": "Created date filter, range",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model97"
          },
          {
            "name": "updatedDate",
            "type": "object",
            "subtype": null,
            "description": "Updated date filter, range",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model97"
          },
          {
            "name": "completedDate",
            "type": "object",
            "subtype": null,
            "description": "Completed date filter, range",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model97"
          },
          {
            "name": "authors",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Authors filter, match of any",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "responsibles",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Responsibles filter, match of any",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "permalink",
            "type": "string",
            "subtype": null,
            "description": "Task permalink, exact match",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "type",
            "type": "string",
            "subtype": null,
            "description": "Task type",
            "comment": "Task Dates, Enum: Backlog, Milestone, Planned",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "limit",
            "type": "number",
            "subtype": null,
            "description": "Limit on number of returned tasks",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "sortField",
            "type": "string",
            "subtype": null,
            "description": "Sort field",
            "comment": "Enum: CreatedDate, UpdatedDate, CompletedDate, DueDate, Status, Importance, Title, LastAccessDate",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "CreatedDate",
                "description": "Sort by created date"
              },
              {
                "value": "UpdatedDate",
                "description": "Sort by updated date"
              },
              {
                "value": "CompletedDate",
                "description": "Sort by completed date"
              },
              {
                "value": "DueDate",
                "description": "Sort by due date"
              },
              {
                "value": "Status",
                "description": "Sort by status"
              },
              {
                "value": "Importance",
                "description": "Sort by importance"
              },
              {
                "value": "Title",
                "description": "Lexicographic sorting by title"
              },
              {
                "value": "LastAccessDate",
                "description": "Sort by last access date"
              }
            ],
            "modelRef": null
          },
          {
            "name": "sortOrder",
            "type": "string",
            "subtype": null,
            "description": "Sort order",
            "comment": "Enum: Asc, Desc",
            "optional": true,
            "optionalDefault": "Asc",
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Asc",
                "description": "Ascending sort order"
              },
              {
                "value": "Desc",
                "description": "Descending sort order"
              }
            ],
            "modelRef": null
          },
          {
            "name": "subTasks",
            "type": "optional boolean",
            "subtype": null,
            "description": "Adds subtasks to search scope",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "pageSize",
            "type": "number",
            "subtype": null,
            "description": "Page size",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "nextPageToken",
            "type": "string",
            "subtype": null,
            "description": "Next page token, overrides any other parameters in request",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "metadata",
            "type": "object",
            "subtype": null,
            "description": "Task metadata filter",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "customField",
            "type": "object",
            "subtype": null,
            "description": "Custom field filter",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model96"
          },
          {
            "name": "customStatuses",
            "type": "array",
            "subtype": "Custom status ID",
            "description": "Custom statuses filter",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "billingTypes",
            "type": "string",
            "subtype": null,
            "description": "Timelog billing types filter (Wrike Resource only)",
            "comment": "Billing type (Wrike Resource only), Enum: Billable, NonBillable",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Billable",
                "description": "Billable"
              },
              {
                "value": "NonBillable",
                "description": "Non-Billable"
              }
            ],
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: authorIds, hasAttachments, attachmentCount, parentIds, superParentIds, sharedIds, responsibleIds, description, briefDescription, recurrent, superTaskIds, subTaskIds, dependencyIds, metadata, customFields, effortAllocation, billingType",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "authorIds",
                "description": "Author IDs"
              },
              {
                "value": "hasAttachments",
                "description": "Has attachments"
              },
              {
                "value": "attachmentCount",
                "description": "Attachment count"
              },
              {
                "value": "parentIds",
                "description": "List of task parent folder"
              },
              {
                "value": "superParentIds",
                "description": "List of folder IDs inherited from parent task"
              },
              {
                "value": "sharedIds",
                "description": "List of user IDs, who have task share"
              },
              {
                "value": "responsibleIds",
                "description": "List of responsible user IDs"
              },
              {
                "value": "description",
                "description": "Description"
              },
              {
                "value": "briefDescription",
                "description": "Brief description"
              },
              {
                "value": "recurrent",
                "description": "Is a task recurrent"
              },
              {
                "value": "superTaskIds",
                "description": "List of supertask IDs"
              },
              {
                "value": "subTaskIds",
                "description": "List of subtask IDs"
              },
              {
                "value": "dependencyIds",
                "description": "Dependency IDs"
              },
              {
                "value": "metadata",
                "description": "Task metadata entries"
              },
              {
                "value": "customFields",
                "description": "Custom fields"
              },
              {
                "value": "effortAllocation",
                "description": "Effort Allocation (Wrike Resource only)"
              },
              {
                "value": "billingType",
                "description": "Billing type"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model104": {
        "name": "Task Dates",
        "details": "Field values limits:\nduration - [0, 1800000)\nstart \u0026 due - [1970-01-01T00:00:00, 2100-01-01T00:00:00)",
        "params": [
          {
            "name": "type",
            "type": "string",
            "subtype": null,
            "description": "Type",
            "comment": "Task Dates, Enum: Backlog, Milestone, Planned",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "duration",
            "type": "number",
            "subtype": null,
            "description": "Duration in minutes. Duration is present in Planned tasks and is optional for Backlog tasks",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "start",
            "type": "string",
            "subtype": null,
            "description": "Start date is present only in Planned tasks",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss (\u0027T\u0027HH:mm:ss is optional)",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "due",
            "type": "string",
            "subtype": null,
            "description": "Due date is present only in Planned and Milestone tasks",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss (\u0027T\u0027HH:mm:ss is optional)",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "workOnWeekends",
            "type": "boolean",
            "subtype": null,
            "description": "Weekends are included in task scheduling",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model105": {
        "name": "Task Effort (Wrike Resource only)",
        "details": null,
        "params": [
          {
            "name": "mode",
            "type": "string",
            "subtype": null,
            "description": "Task Effort mode",
            "comment": "Enum: None, FullTime, Basic, Flexible",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "totalEffort",
            "type": "number",
            "subtype": null,
            "description": "Task total Effort in minutes",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "allocatedEffort",
            "type": "number",
            "subtype": null,
            "description": "Task allocated Effort in minutes",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model33": {
        "name": "Task",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Task ID",
            "description": null,
            "comment": "Task ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "accountId",
            "type": "string",
            "subtype": "Account ID",
            "description": "Account ID",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title, cannot be empty",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "description",
            "type": "string",
            "subtype": null,
            "description": "Description",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "briefDescription",
            "type": "string",
            "subtype": null,
            "description": "Brief description",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "parentIds",
            "type": "array",
            "subtype": "Folder ID",
            "description": "List of task parent folder IDs",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "superParentIds",
            "type": "array",
            "subtype": "Folder ID",
            "description": "List of folder IDs inherited from parent task",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "sharedIds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "List of user IDs, who share the task",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "responsibleIds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "List of responsible user IDs",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "status",
            "type": "string",
            "subtype": null,
            "description": "Status of task",
            "comment": "Task Status, Enum: Active, Completed, Deferred, Cancelled",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "importance",
            "type": "string",
            "subtype": null,
            "description": "Importance of task",
            "comment": "Task Importance, Enum: High, Normal, Low",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "createdDate",
            "type": "string",
            "subtype": null,
            "description": "Created date",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "updatedDate",
            "type": "string",
            "subtype": null,
            "description": "Updated date",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "completedDate",
            "type": "string",
            "subtype": null,
            "description": "Completed date, field is present for tasks with \u0027Completed\u0027 status",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "dates",
            "type": "object",
            "subtype": null,
            "description": "Task dates",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model104"
          },
          {
            "name": "scope",
            "type": "string",
            "subtype": null,
            "description": "Task scope",
            "comment": "Tree Scope, Enum: WsRoot, RbRoot, WsFolder, RbFolder, WsTask, RbTask",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "WsRoot",
                "description": "Virtual root folder of account"
              },
              {
                "value": "RbRoot",
                "description": "Virtual Recycle Bin folder of account"
              },
              {
                "value": "WsFolder",
                "description": "Folder in account"
              },
              {
                "value": "RbFolder",
                "description": "Folder is in Recycle Bin (deleted folder)"
              },
              {
                "value": "WsTask",
                "description": "Task in account"
              },
              {
                "value": "RbTask",
                "description": "Task is in Recycle Bin (deleted task)"
              }
            ],
            "modelRef": null
          },
          {
            "name": "authorIds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "List of author IDs (currently contains 1 element)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "customStatusId",
            "type": "string",
            "subtype": "Custom status ID",
            "description": "Custom status ID",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "hasAttachments",
            "type": "boolean",
            "subtype": null,
            "description": "Has attachments",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "attachmentCount",
            "type": "number",
            "subtype": null,
            "description": "Total count of task attachments",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "permalink",
            "type": "string",
            "subtype": null,
            "description": "Link to open task in web workspace, if user has appropriate access",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "priority",
            "type": "string",
            "subtype": null,
            "description": "Ordering key that defines task order in tasklist",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "followedByMe",
            "type": "boolean",
            "subtype": null,
            "description": "Is a task followed by me",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "followerIds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "List of user IDs, who follows task",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "recurrent",
            "type": "boolean",
            "subtype": null,
            "description": "Is a task recurrent",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "superTaskIds",
            "type": "array",
            "subtype": "Task ID",
            "description": "List of super task IDs",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "subTaskIds",
            "type": "array",
            "subtype": "Task ID",
            "description": "List of subtask IDs",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "dependencyIds",
            "type": "array",
            "subtype": "Dependency ID",
            "description": "List of dependency IDs",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "metadata",
            "type": "array",
            "subtype": null,
            "description": "List of task metadata entries",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "customFields",
            "type": "array",
            "subtype": null,
            "description": "Custom fields",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model99"
          },
          {
            "name": "billingType",
            "type": "string",
            "subtype": null,
            "description": "Task\u0027s timelogs billing type (Wrike Resource only)",
            "comment": "Billing type (Wrike Resource only), Enum: Billable, NonBillable",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Billable",
                "description": "Billable"
              },
              {
                "value": "NonBillable",
                "description": "Non-Billable"
              }
            ],
            "modelRef": null
          },
          {
            "name": "effortAllocation",
            "type": "object",
            "subtype": null,
            "description": "Effort (Wrike Resource only)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model105"
          }
        ]
      }
    },
    {
      "model34": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: recurrent, attachmentCount, effortAllocation, billingType",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "recurrent",
                "description": "Add field to indicate if task is recurrent"
              },
              {
                "value": "attachmentCount",
                "description": "Attachment count"
              },
              {
                "value": "effortAllocation",
                "description": "Effort Allocation (Wrike Resource only)"
              },
              {
                "value": "billingType",
                "description": "Billing type"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model35": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title of task, required",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "description",
            "type": "string",
            "subtype": null,
            "description": "Description of task, will be left blank, if not set",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "status",
            "type": "string",
            "subtype": null,
            "description": "Status of task",
            "comment": "Task Status, Enum: Active, Completed, Deferred, Cancelled",
            "optional": true,
            "optionalDefault": "Active",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "importance",
            "type": "string",
            "subtype": null,
            "description": "Importance of task",
            "comment": "Task Importance, Enum: High, Normal, Low",
            "optional": true,
            "optionalDefault": "Normal",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "dates",
            "type": "object",
            "subtype": null,
            "description": "Task dates. If not specified, a backlogged task is created",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model104"
          },
          {
            "name": "shareds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Shares task with specified users. The task is always shared with the author.",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "parents",
            "type": "array",
            "subtype": "Folder ID",
            "description": "Parent folders for newly created task. Can not contain recycleBinId",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": true,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "responsibles",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Makes specified users responsible for the task",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "followers",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Add specified users to task followers",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "follow",
            "type": "boolean",
            "subtype": null,
            "description": "Follow task",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "priorityBefore",
            "type": "string",
            "subtype": "Task ID",
            "description": "Put newly created task before specified task in task list",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "priorityAfter",
            "type": "string",
            "subtype": "Task ID",
            "description": "Put newly created task after specified task in task list",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "superTasks",
            "type": "array",
            "subtype": "Task ID",
            "description": "Add the task as subtask to specified tasks",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "metadata",
            "type": "array",
            "subtype": null,
            "description": "Metadata to be added to newly created task",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "customFields",
            "type": "array",
            "subtype": null,
            "description": "List of custom fields to set in newly created task",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model99"
          },
          {
            "name": "customStatus",
            "type": "string",
            "subtype": "Custom status ID",
            "description": "Custom status ID",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "effortAllocation",
            "type": "object",
            "subtype": null,
            "description": "Set Task Effort fields: mode, total Effort (Wrike Resource only)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model105"
          },
          {
            "name": "billingType",
            "type": "string",
            "subtype": null,
            "description": "Task\u0027s timelogs billing type (Wrike Resource only)",
            "comment": "Billing type (Wrike Resource only), Enum: Billable, NonBillable",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Billable",
                "description": "Billable"
              },
              {
                "value": "NonBillable",
                "description": "Non-Billable"
              }
            ],
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: effortAllocation, billingType",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "effortAllocation",
                "description": "Effort Allocation (Wrike Resource only)"
              },
              {
                "value": "billingType",
                "description": "Billing type"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model36": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title of task",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "description",
            "type": "string",
            "subtype": null,
            "description": "Task Description",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "status",
            "type": "string",
            "subtype": null,
            "description": "Task status",
            "comment": "Task Status, Enum: Active, Completed, Deferred, Cancelled",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "importance",
            "type": "string",
            "subtype": null,
            "description": "Task importance",
            "comment": "Task Importance, Enum: High, Normal, Low",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "dates",
            "type": "object",
            "subtype": null,
            "description": "Reschedule task and/or change task type",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model104"
          },
          {
            "name": "addParents",
            "type": "array",
            "subtype": "Folder ID",
            "description": "Put task into specified folders of same account. Cannot contain RecycleBin folder",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "removeParents",
            "type": "array",
            "subtype": "Folder ID",
            "description": "Remove task from specified folders. Can not contain RecycleBin folder",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "addShareds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Shared task with specified users",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "removeShareds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Unshare task from specified users",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "addResponsibles",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Add specified users to responsible list",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "removeResponsibles",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Remove specified users from responsible list",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "addFollowers",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Add specified users to task followers",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "follow",
            "type": "boolean",
            "subtype": null,
            "description": "Follow task",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "priorityBefore",
            "type": "string",
            "subtype": "Task ID",
            "description": "Put task in task list before specified task",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "priorityAfter",
            "type": "string",
            "subtype": "Task ID",
            "description": "Put task in task list after specified task",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "addSuperTasks",
            "type": "array",
            "subtype": "Task ID",
            "description": "Add the task as subtask to specified tasks",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "removeSuperTasks",
            "type": "array",
            "subtype": "Task ID",
            "description": "Remove the task form specified tasks subtasks",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "metadata",
            "type": "array",
            "subtype": null,
            "description": "Metadata to be updated (null value removes entry)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model89"
          },
          {
            "name": "customFields",
            "type": "array",
            "subtype": null,
            "description": "Custom fields to be updated or deleted (null value removes field)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model99"
          },
          {
            "name": "customStatus",
            "type": "string",
            "subtype": "Custom status ID",
            "description": "Custom status ID",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "restore",
            "type": "boolean",
            "subtype": null,
            "description": "Restore task from Recycled Bin",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "effortAllocation",
            "type": "object",
            "subtype": null,
            "description": "Set Task Effort fields: mode, total Effort (Wrike Resource only)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model105"
          },
          {
            "name": "billingType",
            "type": "string",
            "subtype": null,
            "description": "Task\u0027s timelogs billing type (Wrike Resource only)",
            "comment": "Billing type (Wrike Resource only), Enum: Billable, NonBillable",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Billable",
                "description": "Billable"
              },
              {
                "value": "NonBillable",
                "description": "Non-Billable"
              }
            ],
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: effortAllocation, billingType",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "effortAllocation",
                "description": "Effort Allocation (Wrike Resource only)"
              },
              {
                "value": "billingType",
                "description": "Billing type"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model37": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "customFields",
            "type": "array",
            "subtype": null,
            "description": "Custom fields to be updated or deleted (null value removes field)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model99"
          },
          {
            "name": "effortAllocation",
            "type": "object",
            "subtype": null,
            "description": "Set Task Effort fields: mode, total Effort (Wrike Resource only)",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model105"
          }
        ]
      }
    },
    {
      "model40": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "plainText",
            "type": "boolean",
            "subtype": null,
            "description": "Get comment text as plain text, HTML otherwise",
            "comment": null,
            "optional": true,
            "optionalDefault": "false",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model39": {
        "name": "Comment",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Comment ID",
            "description": null,
            "comment": "Comment ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "authorId",
            "type": "string",
            "subtype": "Contact ID",
            "description": "Author ID",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "text",
            "type": "string",
            "subtype": null,
            "description": "Comment text",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "createdDate",
            "type": "string",
            "subtype": null,
            "description": "Created date",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "taskId",
            "type": "string",
            "subtype": null,
            "description": "ID of related task. Only one of taskId/folderId fields is present",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "folderId",
            "type": "string",
            "subtype": null,
            "description": "ID of related folder. Only one of taskId/folderId fields is present",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model38": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "plainText",
            "type": "boolean",
            "subtype": null,
            "description": "Get comment text as plain text, HTML otherwise",
            "comment": null,
            "optional": true,
            "optionalDefault": "false",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "updatedDate",
            "type": "object",
            "subtype": null,
            "description": "Updated date filter, get all comments created or updated in the range specified by dates. Time range between dates must be less than 7 days",
            "comment": null,
            "optional": true,
            "optionalDefault": "last 7 days",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model97"
          },
          {
            "name": "limit",
            "type": "number",
            "subtype": null,
            "description": "Maximum number of returned comments",
            "comment": null,
            "optional": true,
            "optionalDefault": "1000",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model41": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "text",
            "type": "string",
            "subtype": null,
            "description": "Comment text, can not be empty",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "plainText",
            "type": "boolean",
            "subtype": null,
            "description": "Treat comment text as plain text, HTML otherwise",
            "comment": null,
            "optional": true,
            "optionalDefault": "false",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model42": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "text",
            "type": "string",
            "subtype": null,
            "description": "Comment text, can not be empty",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "plainText",
            "type": "boolean",
            "subtype": null,
            "description": "Get comment text as plain text, HTML otherwise",
            "comment": null,
            "optional": true,
            "optionalDefault": "false",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model43": {
        "name": "Dependency",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Dependency ID",
            "description": null,
            "comment": "Dependency ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "predecessorId",
            "type": "string",
            "subtype": "Task ID",
            "description": "Predecessor task ID",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "successorId",
            "type": "string",
            "subtype": "Task ID",
            "description": "Successor task ID",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "relationType",
            "type": "string",
            "subtype": null,
            "description": "Relation between Predecessor and Successor",
            "comment": "Dependency relation type, Enum: StartToStart, StartToFinish, FinishToStart, FinishToFinish",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model44": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "predecessorId",
            "type": "string",
            "subtype": "Task ID",
            "description": "Add predecessor task, only one of predecessorId/successorId fields can be specified",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "successorId",
            "type": "string",
            "subtype": "Task ID",
            "description": "Add successor task, only one of predecessorId/successorId fields can be specified",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "relationType",
            "type": "string",
            "subtype": null,
            "description": "Relation between Predecessor and Successor",
            "comment": "Dependency relation type, Enum: StartToStart, StartToFinish, FinishToStart, FinishToFinish",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model45": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "relationType",
            "type": "string",
            "subtype": null,
            "description": "Relation between Predecessor and Successor",
            "comment": "Dependency relation type, Enum: StartToStart, StartToFinish, FinishToStart, FinishToFinish",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model46": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "createdDate",
            "type": "object",
            "subtype": null,
            "description": "Created date filter, exact match or range",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model97"
          },
          {
            "name": "updatedDate",
            "type": "object",
            "subtype": null,
            "description": "Last updated date filter, exact match or range",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model97"
          },
          {
            "name": "trackedDate",
            "type": "object",
            "subtype": null,
            "description": "Tracked date filter, exact match or range",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model97"
          },
          {
            "name": "me",
            "type": "optional boolean",
            "subtype": null,
            "description": "If present - only timelogs created by current user are returned",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "descendants",
            "type": "optional boolean",
            "subtype": null,
            "description": "Adds all descendant tasks to search scope",
            "comment": null,
            "optional": true,
            "optionalDefault": "true",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "subTasks",
            "type": "optional boolean",
            "subtype": null,
            "description": "Adds subtasks to search scope",
            "comment": null,
            "optional": true,
            "optionalDefault": "true",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "plainText",
            "type": "boolean",
            "subtype": null,
            "description": "Get comment text as plain text, HTML otherwise",
            "comment": null,
            "optional": true,
            "optionalDefault": "false",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "timelogCategories",
            "type": "array",
            "subtype": "Timelog category ID",
            "description": "Get timelog records for specified categories",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "billingTypes",
            "type": "array",
            "subtype": null,
            "description": "Billing type filter (Wrike Resource only)",
            "comment": "Billing type (Wrike Resource only), Enum: Billable, NonBillable",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Billable",
                "description": "Billable"
              },
              {
                "value": "NonBillable",
                "description": "Non-Billable"
              }
            ],
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: billingType",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "billingType",
                "description": "Timelog billing type (Wrike Resource only)"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model47": {
        "name": "Timelog",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Timelog Entry ID",
            "description": null,
            "comment": "Timelog Entry ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "taskId",
            "type": "string",
            "subtype": "Task ID",
            "description": "Task to which timelog record is tracked",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "userId",
            "type": "string",
            "subtype": "Contact ID",
            "description": "User who tracked the timelog record",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "categoryId",
            "type": "string",
            "subtype": "Timelog category ID",
            "description": "Category of the timelog record",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "billingType",
            "type": "string",
            "subtype": null,
            "description": "Timelog billing type (Wrike Resource only)",
            "comment": "Billing type (Wrike Resource only), Enum: Billable, NonBillable",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Billable",
                "description": "Billable"
              },
              {
                "value": "NonBillable",
                "description": "Non-Billable"
              }
            ],
            "modelRef": null
          },
          {
            "name": "hours",
            "type": "number",
            "subtype": null,
            "description": "Hours tracked in timelog record, must be in [0..24] hours range",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "createdDate",
            "type": "string",
            "subtype": null,
            "description": "Date of timelog was created",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "updatedDate",
            "type": "string",
            "subtype": null,
            "description": "Date of timelog was updated",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "trackedDate",
            "type": "string",
            "subtype": null,
            "description": "Date for which timelog was recorded",
            "comment": "Format: yyyy-MM-dd",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "comment",
            "type": "string",
            "subtype": null,
            "description": "Timelog record comment",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model48": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "plainText",
            "type": "boolean",
            "subtype": null,
            "description": "Get comment text as plain text, HTML otherwise",
            "comment": null,
            "optional": true,
            "optionalDefault": "false",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: billingType",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "billingType",
                "description": "Timelog billing type (Wrike Resource only)"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model50": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "comment",
            "type": "string",
            "subtype": null,
            "description": "Timelog comment",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "hours",
            "type": "number",
            "subtype": null,
            "description": "New timelog tracked hours",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "trackedDate",
            "type": "string",
            "subtype": null,
            "description": "New timelog date",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "plainText",
            "type": "boolean",
            "subtype": null,
            "description": "Get comment text as plain text, HTML otherwise",
            "comment": null,
            "optional": true,
            "optionalDefault": "false",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "categoryId",
            "type": "string",
            "subtype": "Timelog category ID",
            "description": "Timelog category",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: billingType",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "billingType",
                "description": "Timelog billing type (Wrike Resource only)"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model49": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "comment",
            "type": "string",
            "subtype": null,
            "description": "Timelog record comment",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "hours",
            "type": "number",
            "subtype": null,
            "description": "Time to log in hours",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "trackedDate",
            "type": "string",
            "subtype": null,
            "description": "Date to register time",
            "comment": "Format: yyyy-MM-dd",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "plainText",
            "type": "boolean",
            "subtype": null,
            "description": "Get comment text as plain text, HTML otherwise",
            "comment": null,
            "optional": true,
            "optionalDefault": "false",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "categoryId",
            "type": "string",
            "subtype": "Timelog category ID",
            "description": "Timelog category",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: billingType",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "billingType",
                "description": "Timelog billing type (Wrike Resource only)"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model52": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "versions",
            "type": "optional boolean",
            "subtype": null,
            "description": "Get attachments with previous versions",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "createdDate",
            "type": "object",
            "subtype": null,
            "description": "Created date filter. Required to request attachments in account. Time range duration should be less than 31 day",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model97"
          },
          {
            "name": "withUrls",
            "type": "optional boolean",
            "subtype": null,
            "description": "Get attachment URLs. The link for attachment from Wrike is valid for 24 hours from when you make the request",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model53": {
        "name": "Attachment",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Attachment ID",
            "description": null,
            "comment": "Attachment ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "authorId",
            "type": "string",
            "subtype": "Contact ID",
            "description": "ID of user who uploaded the attachment",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "name",
            "type": "string",
            "subtype": null,
            "description": "Attachment filename",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "createdDate",
            "type": "string",
            "subtype": null,
            "description": "Upload date",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "version",
            "type": "number",
            "subtype": null,
            "description": "Attachment version",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "type",
            "type": "string",
            "subtype": null,
            "description": "Attachment type",
            "comment": "Attachment Type, Enum: Wrike, Google, DropBox, Box, OneDrive, External, DAM",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Wrike",
                "description": "Attachment file content stored in Wrike. When deleted, actual file is removed"
              },
              {
                "value": "Google",
                "description": "Google attachment. Attachment can be accessed only via URL, downloads are not supported by Wrike.When deleted, only stored link is removed"
              },
              {
                "value": "DropBox",
                "description": "DropBox attachment. When deleted, only stored link is removed"
              },
              {
                "value": "Box",
                "description": "Box attachment. Attachment can be accessed only via URL, downloads are not supported by Wrike.When deleted, only stored link is removed"
              },
              {
                "value": "OneDrive",
                "description": "OneDrive attachment. When deleted, only stored link is removed"
              },
              {
                "value": "External",
                "description": "External attachment"
              },
              {
                "value": "DAM",
                "description": "Attachment from an external DAM system"
              }
            ],
            "modelRef": null
          },
          {
            "name": "contentType",
            "type": "string",
            "subtype": null,
            "description": "Content type",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "size",
            "type": "number",
            "subtype": null,
            "description": "Size for Wrike Attachments. For external attachments, size is equal to -1",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "taskId",
            "type": "string",
            "subtype": null,
            "description": "ID of related task. Only one of taskId/folderId fields is present",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "folderId",
            "type": "string",
            "subtype": null,
            "description": "ID of related folder. Only one of taskId/folderId fields is present",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "commentId",
            "type": "string",
            "subtype": null,
            "description": "ID of related comment",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "currentAttachmentId",
            "type": "string",
            "subtype": "Attachment ID",
            "description": "ID of current attachment version",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "previewUrl",
            "type": "string",
            "subtype": null,
            "description": "Link to download external attachment preview (present if preview is available)",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "url",
            "type": "string",
            "subtype": null,
            "description": "Link to download attachment",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "reviewIds",
            "type": "array",
            "subtype": "Review ID",
            "description": "Review IDs",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "width",
            "type": "number",
            "subtype": null,
            "description": "Attachment width, if image",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "height",
            "type": "number",
            "subtype": null,
            "description": "Attachment height, if image",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model54": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "versions",
            "type": "optional boolean",
            "subtype": null,
            "description": "Get attachments with previous versions",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model57": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "url",
            "type": "string",
            "subtype": null,
            "description": "Download attachment by url",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model58": {
        "name": "APIv3 version",
        "details": null,
        "params": [
          {
            "name": "major",
            "type": "number",
            "subtype": null,
            "description": "Major version number",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "minor",
            "type": "number",
            "subtype": null,
            "description": "Minor version number",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model59": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "type",
            "type": "string",
            "subtype": null,
            "description": "Entity type",
            "comment": "Entity type, Enum: ApiV2Account, ApiV2User, ApiV2Folder, ApiV2Task, ApiV2Comment, ApiV2Attachment, ApiV2Timelog",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "ApiV2Account",
                "description": "API v2 account"
              },
              {
                "value": "ApiV2User",
                "description": "API v2 user or group"
              },
              {
                "value": "ApiV2Folder",
                "description": "API v2 folder"
              },
              {
                "value": "ApiV2Task",
                "description": "API v2 task"
              },
              {
                "value": "ApiV2Comment",
                "description": "API v2 comment"
              },
              {
                "value": "ApiV2Attachment",
                "description": "API v2 attachment"
              },
              {
                "value": "ApiV2Timelog",
                "description": "API v2 timelog entry"
              }
            ],
            "modelRef": null
          },
          {
            "name": "ids",
            "type": "array",
            "subtype": null,
            "description": "List of APIv2 legacy IDs",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model60": {
        "name": "APIv3/APIv2 ID pair",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": null,
            "description": "API v3 ID",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "apiV2Id",
            "type": "string",
            "subtype": null,
            "description": "API v2 legacy ID",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model61": {
        "name": "Colors Info",
        "details": null,
        "params": [
          {
            "name": "name",
            "type": "string",
            "subtype": null,
            "description": "Color name",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "hex",
            "type": "string",
            "subtype": null,
            "description": "HEX code",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model64": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: members",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "members",
                "description": "Space members"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model106": {
        "name": "Space member",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Contact ID",
            "description": null,
            "comment": "Contact ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "accessRoleId",
            "type": "string",
            "subtype": "Access Role ID",
            "description": null,
            "comment": "Access Role ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "isManager",
            "type": "boolean",
            "subtype": null,
            "description": "User is manager of space",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model63": {
        "name": "Space",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Space ID",
            "description": null,
            "comment": "Space ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "avatarUrl",
            "type": "string",
            "subtype": null,
            "description": "Avatar URL",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "accessType",
            "type": "string",
            "subtype": null,
            "description": "Access type",
            "comment": "Space Access Type, Enum: Personal, Private, Public",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "archived",
            "type": "boolean",
            "subtype": null,
            "description": "Space is archived",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "members",
            "type": "array",
            "subtype": null,
            "description": "Space members",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model106"
          },
          {
            "name": "guestRoleId",
            "type": "string",
            "subtype": "Access Role ID",
            "description": "Guest Role ID, available only for public space",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model62": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "withArchived",
            "type": "boolean",
            "subtype": null,
            "description": "Include archived spaces",
            "comment": null,
            "optional": true,
            "optionalDefault": "false",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "userIsMember",
            "type": "boolean",
            "subtype": null,
            "description": "Include only spaces where user is member",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: members",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "members",
                "description": "Space members"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model65": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "accessType",
            "type": "string",
            "subtype": null,
            "description": "Type of the space",
            "comment": "Space Access Type, Enum: Private, Public",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title of the space",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "members",
            "type": "array",
            "subtype": null,
            "description": "Space members. Passing more than 1 member with same ID is not allowed",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model106"
          },
          {
            "name": "guestRoleId",
            "type": "string",
            "subtype": "Access Role ID",
            "description": "Space guest role. Available only for public space",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: members",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "members",
                "description": "Space members"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model66": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "accessType",
            "type": "string",
            "subtype": null,
            "description": "Type of the space",
            "comment": "Space Access Type, Enum: Private, Public",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title of the space",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "membersAdd",
            "type": "array",
            "subtype": null,
            "description": "Space members to add. Any member should be passed only once in request",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model106"
          },
          {
            "name": "membersUpdate",
            "type": "array",
            "subtype": null,
            "description": "Space members to update. Any member should be passed only once in request",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model106"
          },
          {
            "name": "membersRemove",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Space members to remove. Any member should be passed only once in request",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "guestRoleId",
            "type": "string",
            "subtype": "Access Role ID",
            "description": "Space guest role. Available only for public space",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: members",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "members",
                "description": "Space members"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model56": {
        "name": "Attachment Url",
        "details": null,
        "params": [
          {
            "name": "url",
            "type": "string",
            "subtype": null,
            "description": "URL by which attachment can be accessed",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model55": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "size",
            "type": "string",
            "subtype": null,
            "description": "Preview dimensions",
            "comment": "Dimensions of the preview image with limit on width or height, Enum: w44, w100, w200, w300, w400, h400",
            "optional": true,
            "optionalDefault": "w100",
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "w44",
                "description": "Width \u003d 44, height \u003d auto"
              },
              {
                "value": "w100",
                "description": "Width \u003d 100, height \u003d auto"
              },
              {
                "value": "w200",
                "description": "Width \u003d 200, height \u003d auto"
              },
              {
                "value": "w300",
                "description": "Width \u003d 300, height \u003d auto"
              },
              {
                "value": "w400",
                "description": "Width \u003d 400, height \u003d auto"
              },
              {
                "value": "h400",
                "description": "Width \u003d auto, height \u003d 400"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model51": {
        "name": "Timelog category",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Timelog category ID",
            "description": null,
            "comment": "Timelog category ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "name",
            "type": "string",
            "subtype": null,
            "description": "Name of the timelog record",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "order",
            "type": "number",
            "subtype": null,
            "description": "Order number of the timelog category in category list",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "hidden",
            "type": "boolean",
            "subtype": null,
            "description": "Timelog category is hidden",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model28": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "parent",
            "type": "string",
            "subtype": "Folder ID",
            "description": "ID of parent folder",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title, cannot be empty",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "titlePrefix",
            "type": "string",
            "subtype": null,
            "description": "Title prefix for all copied tasks",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "copyDescriptions",
            "type": "boolean",
            "subtype": null,
            "description": "Copy descriptions or leave empty",
            "comment": null,
            "optional": true,
            "optionalDefault": "true",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "copyResponsibles",
            "type": "boolean",
            "subtype": null,
            "description": "Copy responsibles",
            "comment": null,
            "optional": true,
            "optionalDefault": "true",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "addResponsibles",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Add specified users to task responsible list",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "removeResponsibles",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Remove specified users from task responsible list",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "copyCustomFields",
            "type": "boolean",
            "subtype": null,
            "description": "Copy custom fields",
            "comment": null,
            "optional": true,
            "optionalDefault": "true",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "copyCustomStatuses",
            "type": "boolean",
            "subtype": null,
            "description": "Copy custom statuses or set according to workflow otherwise",
            "comment": null,
            "optional": true,
            "optionalDefault": "true",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "copyStatuses",
            "type": "boolean",
            "subtype": null,
            "description": "Copy task statuses or set to Active otherwise",
            "comment": null,
            "optional": true,
            "optionalDefault": "true",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "copyParents",
            "type": "boolean",
            "subtype": null,
            "description": "Preserve parent folders",
            "comment": null,
            "optional": true,
            "optionalDefault": "false",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "rescheduleDate",
            "type": "string",
            "subtype": null,
            "description": "Date to use in task rescheduling. Note that only active tasks can be rescheduled. To activate and reschedule all tasks, use \u0027rescheduleDate\u0027 in combination with copyStatuses \u003d false",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "rescheduleMode",
            "type": "string",
            "subtype": null,
            "description": "Mode to be used for rescheduling (based on first or last date), has effect only if reschedule date is specified.",
            "comment": "Task rescheduling mode, Enum: Start, End",
            "optional": true,
            "optionalDefault": "Start",
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Start",
                "description": "Tasks in scope are rescheduled starting from reschedule date"
              },
              {
                "value": "End",
                "description": "Tasks in scope are rescheduled ending with reschedule date"
              }
            ],
            "modelRef": null
          },
          {
            "name": "entryLimit",
            "type": "number",
            "subtype": null,
            "description": "Limit maximum allowed number for tasks/folders in tree for copy, operation will fail if limit is exceeded, should be 1..250",
            "comment": null,
            "optional": true,
            "optionalDefault": "250",
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model29": {
        "name": "Async job",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Async job ID",
            "description": null,
            "comment": "Async job ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "status",
            "type": "string",
            "subtype": null,
            "description": "Job status",
            "comment": "Async job status, Enum: InQueue, InProgress, Completed, Failed",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "progressPercent",
            "type": "number",
            "subtype": null,
            "description": "Progress percents",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "totalCount",
            "type": "number",
            "subtype": null,
            "description": "Total count",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "processedCount",
            "type": "number",
            "subtype": null,
            "description": "Processed count",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "type",
            "type": "string",
            "subtype": null,
            "description": "Job type",
            "comment": "Async job type, Enum: CopyFolder",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "result",
            "type": "object",
            "subtype": null,
            "description": "Result",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "errorMessage",
            "type": "string",
            "subtype": null,
            "description": "Error message",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model107": {
        "name": "Data Export resource",
        "details": null,
        "params": [
          {
            "name": "name",
            "type": "string",
            "subtype": null,
            "description": "Name of exported resource",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "url",
            "type": "string",
            "subtype": null,
            "description": "Link to a file of exported resource",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model67": {
        "name": "Data Export operation",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Data Export ID",
            "description": null,
            "comment": "Data Export ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "completedDate",
            "type": "string",
            "subtype": null,
            "description": "The date when data export was finished",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "status",
            "type": "string",
            "subtype": null,
            "description": "Status",
            "comment": "Enum: Scheduled, InProgress, Completed, Cancelled, Failed",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "resources",
            "type": "array",
            "subtype": null,
            "description": "List of exported resources",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model107"
          }
        ]
      }
    },
    {
      "model68": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "version",
            "type": "string",
            "subtype": null,
            "description": "Version",
            "comment": "Enum: V0, V1",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model108": {
        "name": "Data Export resource foreign key schema",
        "details": null,
        "params": [
          {
            "name": "tableId",
            "type": "string",
            "subtype": null,
            "description": "Foreign table id",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "columnId",
            "type": "string",
            "subtype": null,
            "description": "Foreign column id",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model109": {
        "name": "Data Export resource column schema",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": null,
            "description": "Column id",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "alias",
            "type": "string",
            "subtype": null,
            "description": "Column alias",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "dataType",
            "type": "string",
            "subtype": null,
            "description": "Column data type",
            "comment": "Enum: Number, String, Date, Boolean",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "foreignKey",
            "type": "object",
            "subtype": null,
            "description": "Foreign key",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model108"
          }
        ]
      }
    },
    {
      "model69": {
        "name": "Data Export table schema",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": null,
            "description": "Table id",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "alias",
            "type": "string",
            "subtype": null,
            "description": "Table alias",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "columns",
            "type": "array",
            "subtype": null,
            "description": "List of exported columns",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model109"
          }
        ]
      }
    },
    {
      "model70": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "eventDate",
            "type": "object",
            "subtype": null,
            "description": "Event date filter, range",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model97"
          },
          {
            "name": "operations",
            "type": "array",
            "subtype": null,
            "description": "Operations filter",
            "comment": "Audit Log operation, Enum: UserLoggedIn, UserFailLogin, UserLogout, AdminLoggedInAsUser, OneTimePasswordCreated, OneTimePasswordUsed, OneTimePasswordRevoked, UserRoleChanged, UserAdminPermissionsChanged, UserGrantAdmin, UserRevokeAdmin, UserDeactivated, UserActivated, UsersAndGroupsExported, InvitationSend, InvitationAccepted, AttachUploaded, AttachDeleted, GroupCreated, GroupMemberAdded, GroupMemberRemoved, GroupRenamed, GroupDeleted, GroupParentAdded, GroupParentRemoved, TaskParentAdded, TaskParentRemoved, TaskShared, TaskUnshared, TaskAssigned, TaskUnassigned, TaskDeleted, TaskErased, TimelogLocked, TimelogUnlocked, TaskCommentChanged, TaskCommentDeleted, RecycleBinErased, TaskStatusChanged, TaskDuplication, UserDeleted, UserRestored, ApproverAdded, ApproverRemoved, ApprovalDescriptionChanged, ApprovalDueDateChanged, ApprovalCreated, ApprovalFinished, ApprovalCanceled, ApprovalDecisionMade, CustomFieldCreated, CustomFieldModified, CustomFieldRemoved, CustomFieldRestored, CustomFieldAddedToFolder, CustomFieldRemovedFromFolder, SecondFactorEnabled, SecondFactorDisabled, SecondFactorUsageReportCreated, AuditReportCreated, AccountBackupCreated, AccountModified, AccountDeleted, Oauth2AccessGranted, Oauth2AccessRevoked, FeedCreated, ExcelExportCreated, AccessAuditReportCsvExport, UserProfileUpdated, PasswordChanged, PasswordPolicyModified, ApprovedIpRangesOrSubnetsChanged, InvitationPolicyChanged, RequestFormCreated, RequestFormModified, RequestFormDeleted, AccessRoleCreated, AccessRoleModified, AccessRoleDeleted, WorkflowCreated, WorkflowDeleted, WorkflowModified, CalendarExternalLinksDeactivated, CalendarExternalLinksActivated, CalendarExternalLinkCreated, CalendarExternalLinkDeleted, AnalyzePublicLinkCreated, AnalyzePublicLinkDeleted, AnalyzePublicLinkAccessed, GuestReviewerInvited, GuestReviewerChanged, GuestReviewerRevoked, GuestReviewAccepted, GuestReviewRejected, GuestReviewAccountSettingsChanged, GanttSnapshotCreated, GanttSnapshotDeleted, UserTaskGroupRolesChanged, AccountDataExportRequested, AccountDataExportGenerated, SamlSSOEnabled, SamlSSODisabled, SamlSSOSettingsChanged, SamlSSOMetadataChanged, SamlClearPasswordForSamlUsers, OneTimePasswordStatusSwitched, AccessCodeGenerated, AccessCodeAccepted, AccessCodeDeclined, ApprovedDomainsChanged, AdminMailSettingsChanged, SpaceCreated, SpaceDeleted, SpaceArchivedUnarchived, UserJoinedSpace, UserLeftSpace",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "pageSize",
            "type": "number",
            "subtype": null,
            "description": "Page size",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "nextPageToken",
            "type": "string",
            "subtype": null,
            "description": "Next page token, overrides any other parameters in request",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model71": {
        "name": "Audit Log",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Audit Log ID",
            "description": null,
            "comment": "Audit Log ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "operation",
            "type": "string",
            "subtype": null,
            "description": "Operation",
            "comment": "Audit Log operation, Enum: UserLoggedIn, UserFailLogin, UserLogout, AdminLoggedInAsUser, OneTimePasswordCreated, OneTimePasswordUsed, OneTimePasswordRevoked, UserRoleChanged, UserAdminPermissionsChanged, UserGrantAdmin, UserRevokeAdmin, UserDeactivated, UserActivated, UsersAndGroupsExported, InvitationSend, InvitationAccepted, AttachUploaded, AttachDeleted, GroupCreated, GroupMemberAdded, GroupMemberRemoved, GroupRenamed, GroupDeleted, GroupParentAdded, GroupParentRemoved, TaskParentAdded, TaskParentRemoved, TaskShared, TaskUnshared, TaskAssigned, TaskUnassigned, TaskDeleted, TaskErased, TimelogLocked, TimelogUnlocked, TaskCommentChanged, TaskCommentDeleted, RecycleBinErased, TaskStatusChanged, TaskDuplication, UserDeleted, UserRestored, ApproverAdded, ApproverRemoved, ApprovalDescriptionChanged, ApprovalDueDateChanged, ApprovalCreated, ApprovalFinished, ApprovalCanceled, ApprovalDecisionMade, CustomFieldCreated, CustomFieldModified, CustomFieldRemoved, CustomFieldRestored, CustomFieldAddedToFolder, CustomFieldRemovedFromFolder, SecondFactorEnabled, SecondFactorDisabled, SecondFactorUsageReportCreated, AuditReportCreated, AccountBackupCreated, AccountModified, AccountDeleted, Oauth2AccessGranted, Oauth2AccessRevoked, FeedCreated, ExcelExportCreated, AccessAuditReportCsvExport, UserProfileUpdated, PasswordChanged, PasswordPolicyModified, ApprovedIpRangesOrSubnetsChanged, InvitationPolicyChanged, RequestFormCreated, RequestFormModified, RequestFormDeleted, AccessRoleCreated, AccessRoleModified, AccessRoleDeleted, WorkflowCreated, WorkflowDeleted, WorkflowModified, CalendarExternalLinksDeactivated, CalendarExternalLinksActivated, CalendarExternalLinkCreated, CalendarExternalLinkDeleted, AnalyzePublicLinkCreated, AnalyzePublicLinkDeleted, AnalyzePublicLinkAccessed, GuestReviewerInvited, GuestReviewerChanged, GuestReviewerRevoked, GuestReviewAccepted, GuestReviewRejected, GuestReviewAccountSettingsChanged, GanttSnapshotCreated, GanttSnapshotDeleted, UserTaskGroupRolesChanged, AccountDataExportRequested, AccountDataExportGenerated, SamlSSOEnabled, SamlSSODisabled, SamlSSOSettingsChanged, SamlSSOMetadataChanged, SamlClearPasswordForSamlUsers, OneTimePasswordStatusSwitched, AccessCodeGenerated, AccessCodeAccepted, AccessCodeDeclined, ApprovedDomainsChanged, AdminMailSettingsChanged, SpaceCreated, SpaceDeleted, SpaceArchivedUnarchived, UserJoinedSpace, UserLeftSpace",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "userId",
            "type": "string",
            "subtype": "Contact ID",
            "description": "Operational user ID",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "userEmail",
            "type": "string",
            "subtype": null,
            "description": "Operational user e-mail",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "eventDate",
            "type": "string",
            "subtype": null,
            "description": "Date and time when operation was performed",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "ipAddress",
            "type": "string",
            "subtype": null,
            "description": "IP address from which an operation was performed",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "objectType",
            "type": "string",
            "subtype": null,
            "description": "Object type",
            "comment": "Audit Log object type, Enum: User, Account, Task, Folder, Project, Comment, Attachment, Invitation, Group, CustomField, Oauth2Client, RequestForm, Workflow, CalendarExternalLink, WorkspaceSnapshot, DataExport, AccessRole, Space, AnalyzeReport",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "objectName",
            "type": "string",
            "subtype": null,
            "description": "Object name",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "objectId",
            "type": "string",
            "subtype": null,
            "description": "Object ID",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "details",
            "type": "object",
            "subtype": null,
            "description": "Operation details",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model72": {
        "name": "Access Role",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "Access Role ID",
            "description": null,
            "comment": "Access Role ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Role title",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "description",
            "type": "string",
            "subtype": null,
            "description": "Role description",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model110": {
        "name": "Approval decision",
        "details": null,
        "params": [
          {
            "name": "approverId",
            "type": "string",
            "subtype": "Contact ID",
            "description": null,
            "comment": "Contact ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "comment",
            "type": "string",
            "subtype": null,
            "description": "comment",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "status",
            "type": "string",
            "subtype": null,
            "description": "status",
            "comment": "Approval decision status, Enum: Pending, Approved, Rejected",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "updatedDate",
            "type": "string",
            "subtype": null,
            "description": "update date",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model74": {
        "name": "Approval",
        "details": null,
        "params": [
          {
            "name": "taskId",
            "type": "string",
            "subtype": "Task ID",
            "description": "ID of task. Only one of taskId/folderId fields is present",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "folderId",
            "type": "string",
            "subtype": "Folder ID",
            "description": "ID of folder/project. Only one of taskId/folderId fields is present",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "authorId",
            "type": "string",
            "subtype": "Contact ID",
            "description": "ID of user who created approval",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title. Empty by default, set via workflow automation or by user on the portal",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "description",
            "type": "string",
            "subtype": null,
            "description": "Description",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "updatedDate",
            "type": "string",
            "subtype": null,
            "description": "Update date",
            "comment": "Format: yyyy-MM-dd\u0027T\u0027HH:mm:ss\u0027Z\u0027",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "dueDate",
            "type": "string",
            "subtype": null,
            "description": "Due date, if exists",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "decisions",
            "type": "array",
            "subtype": null,
            "description": "Approvers and their decisions",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model110"
          },
          {
            "name": "attachmentIds",
            "type": "array",
            "subtype": "Attachment ID",
            "description": "ID of root attachments in review",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "type",
            "type": "string",
            "subtype": null,
            "description": "Approval type",
            "comment": "Approval type, Enum: Regular, FilesOnly",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "autoFinishOnApprove",
            "type": "boolean",
            "subtype": null,
            "description": "Is approval would be finished automatically on reaching Approved status",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "autoFinishOnReject",
            "type": "boolean",
            "subtype": null,
            "description": "Is approval would be finished automatically on reaching Rejected status",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "finished",
            "type": "boolean",
            "subtype": null,
            "description": "Is approval finished",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "finisherId",
            "type": "string",
            "subtype": "Contact ID",
            "description": "ID of user who finished approval",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model73": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "statuses",
            "type": "string",
            "subtype": null,
            "description": "Get approvals for specified statuses",
            "comment": "Approval final status, Enum: Pending, Approved, Rejected, Cancelled, Draft",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "updatedDate",
            "type": "object",
            "subtype": null,
            "description": "Last updated date filter, exact match or range",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model97"
          },
          {
            "name": "approvers",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Approvers filter, match of any",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "pendingApprovers",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Pending approvers filter, match of any",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "limit",
            "type": "number",
            "subtype": null,
            "description": "Limit on number of returned approvals",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "pageSize",
            "type": "number",
            "subtype": null,
            "description": "Page size",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "nextPageToken",
            "type": "string",
            "subtype": null,
            "description": "Next page token, overrides any other parameters in request",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model75": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "description",
            "type": "string",
            "subtype": null,
            "description": "Description",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "dueDate",
            "type": "string",
            "subtype": null,
            "description": "Due date",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "approvers",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Assign approvers",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "attachments",
            "type": "array",
            "subtype": "Attachment ID",
            "description": "List of root attachments to set in approval",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "autoFinishOnApprove",
            "type": "string",
            "subtype": null,
            "description": "Is finish approval automatically when all approvers have approved. Set to true by default",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "autoFinishOnReject",
            "type": "string",
            "subtype": null,
            "description": "Is finish approval automatically when some of approvers have rejected. Set to true by default",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model76": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "description",
            "type": "string",
            "subtype": null,
            "description": "description",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "dueDate",
            "type": "string",
            "subtype": null,
            "description": "due date",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "addApprovers",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Assign approvers",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "removeApprovers",
            "type": "array",
            "subtype": "Contact ID",
            "description": "Remove approvers",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "addAttachments",
            "type": "array",
            "subtype": "Attachment ID",
            "description": "Add root attachments to approval",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "removeAttachments",
            "type": "array",
            "subtype": "Attachment ID",
            "description": "Remove root attachments from approval",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "autoFinishOnApprove",
            "type": "string",
            "subtype": null,
            "description": "Is finish approval automatically when all approvers have approved",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "autoFinishOnReject",
            "type": "string",
            "subtype": null,
            "description": "Is finish approval automatically when some of approvers have rejected",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model77": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: userIds",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "userIds",
                "description": "Users assigned to WorkSchedule"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model78": {
        "name": "Work Schedule model",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": "WorkSchedule ID",
            "description": null,
            "comment": "WorkSchedule ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "scheduleType",
            "type": "string",
            "subtype": null,
            "description": "Schedule type",
            "comment": "Work Schedule type, Enum: Default, Custom",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Default",
                "description": "Default schedule is created along with account and used for all users not explicitly assigned to custom schedule"
              },
              {
                "value": "Custom",
                "description": "Custom schedule is used when some account users have schedules which is different to default"
              }
            ],
            "modelRef": null
          },
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Title",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "workweek",
            "type": "array",
            "subtype": null,
            "description": "Work week",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "userIds",
            "type": "array",
            "subtype": "Contact ID",
            "description": "User ids assigned to schedule",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model111": {
        "name": "Work Schedule work week create/update model",
        "details": null,
        "params": [
          {
            "name": "dayOfWeek",
            "type": "string",
            "subtype": null,
            "description": "Day of week",
            "comment": "Week Day, Enum: Sun, Mon, Tue, Wed, Thu, Fri, Sat",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "isWorkDay",
            "type": "boolean",
            "subtype": null,
            "description": "Is it working day",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model79": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Name of schedule",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "workweek",
            "type": "array",
            "subtype": null,
            "description": "Work week: working and non-working days",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model111"
          },
          {
            "name": "addUsers",
            "type": "array",
            "subtype": null,
            "description": "User ids to assign to the schedule",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: userIds",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "userIds",
                "description": "Users assigned to WorkSchedule"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model80": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "title",
            "type": "string",
            "subtype": null,
            "description": "Name of work schedule",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "workweek",
            "type": "array",
            "subtype": null,
            "description": "Work week: working and non-working days",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model111"
          },
          {
            "name": "addUsers",
            "type": "array",
            "subtype": null,
            "description": "User ids to assign to the schedule",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "removeUsers",
            "type": "array",
            "subtype": null,
            "description": "User ids to unassign from the schedule",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "fields",
            "type": "array",
            "subtype": null,
            "description": "Json string array of optional fields to be included in the response model",
            "comment": "Optional fields, Enum: userIds",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "userIds",
                "description": "Users assigned to WorkSchedule"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model81": {
        "name": "Work Schedule exception model",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": null,
            "description": null,
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "fromDate",
            "type": "string",
            "subtype": null,
            "description": null,
            "comment": "Format: yyyy-MM-dd",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "toDate",
            "type": "string",
            "subtype": null,
            "description": null,
            "comment": "Format: yyyy-MM-dd",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "isWorkDays",
            "type": "boolean",
            "subtype": null,
            "description": "True if this exception is for working days",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "exclusionType",
            "type": "string",
            "subtype": null,
            "description": "Type of exception",
            "comment": "Type of WorkSchedule exception, Enum: AdditionalWorkDays, PublicHolidays, OtherEvent",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "AdditionalWorkDays",
                "description": "Additional working days, i.e. during weekends"
              },
              {
                "value": "PublicHolidays",
                "description": "Non-working days because of public holidays"
              },
              {
                "value": "OtherEvent",
                "description": "Non-working days because of some company or private event"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model82": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "dateRange",
            "type": "object",
            "subtype": null,
            "description": "Date range to query exceptions",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model103"
          }
        ]
      }
    },
    {
      "model83": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "fromDate",
            "type": "string",
            "subtype": null,
            "description": "New exception from date",
            "comment": "Format: yyyy-MM-dd",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "toDate",
            "type": "string",
            "subtype": null,
            "description": "New exception to date",
            "comment": "Format: yyyy-MM-dd",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "exclusionType",
            "type": "string",
            "subtype": null,
            "description": "Type of new exception",
            "comment": "Type of WorkSchedule exception, Enum: AdditionalWorkDays, PublicHolidays, OtherEvent",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "AdditionalWorkDays",
                "description": "Additional working days, i.e. during weekends"
              },
              {
                "value": "PublicHolidays",
                "description": "Non-working days because of public holidays"
              },
              {
                "value": "OtherEvent",
                "description": "Non-working days because of some company or private event"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model84": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "fromDate",
            "type": "string",
            "subtype": null,
            "description": "Exception from date",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "toDate",
            "type": "string",
            "subtype": null,
            "description": "Exception to date",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "exclusionType",
            "type": "string",
            "subtype": null,
            "description": "Type of exception",
            "comment": "Type of WorkSchedule exception, Enum: AdditionalWorkDays, PublicHolidays, OtherEvent",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "AdditionalWorkDays",
                "description": "Additional working days, i.e. during weekends"
              },
              {
                "value": "PublicHolidays",
                "description": "Non-working days because of public holidays"
              },
              {
                "value": "OtherEvent",
                "description": "Non-working days because of some company or private event"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model85": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "dateRange",
            "type": "object",
            "subtype": null,
            "description": "Query exceptions for given date range",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": "model103"
          },
          {
            "name": "userIds",
            "type": "array",
            "subtype": null,
            "description": "Query exceptions for given user ids",
            "comment": null,
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          }
        ]
      }
    },
    {
      "model86": {
        "name": "User Schedule exception model",
        "details": null,
        "params": [
          {
            "name": "id",
            "type": "string",
            "subtype": null,
            "description": null,
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "userId",
            "type": "string",
            "subtype": "Contact ID",
            "description": null,
            "comment": "Contact ID",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "fromDate",
            "type": "string",
            "subtype": null,
            "description": null,
            "comment": "Format: yyyy-MM-dd",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "toDate",
            "type": "string",
            "subtype": null,
            "description": null,
            "comment": "Format: yyyy-MM-dd",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "isWorkDays",
            "type": "boolean",
            "subtype": null,
            "description": "True if this exception is for working days",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "exclusionType",
            "type": "string",
            "subtype": null,
            "description": "Type of exception",
            "comment": "Type of User Schedule exception, Enum: Overtime, VacationPTO, OtherNonWorking",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Overtime",
                "description": "Additional working days"
              },
              {
                "value": "VacationPTO",
                "description": "Paid vacations"
              },
              {
                "value": "OtherNonWorking",
                "description": "Other non-working days"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model87": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "userId",
            "type": "object",
            "subtype": null,
            "description": "User id to add new exception",
            "comment": null,
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "fromDate",
            "type": "string",
            "subtype": null,
            "description": "New exception from date",
            "comment": "Format: yyyy-MM-dd",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "toDate",
            "type": "string",
            "subtype": null,
            "description": "New exception to date",
            "comment": "Format: yyyy-MM-dd",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "exclusionType",
            "type": "string",
            "subtype": null,
            "description": "Type of new exception",
            "comment": "Type of User Schedule exception, Enum: Overtime, VacationPTO, OtherNonWorking",
            "optional": false,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Overtime",
                "description": "Additional working days"
              },
              {
                "value": "VacationPTO",
                "description": "Paid vacations"
              },
              {
                "value": "OtherNonWorking",
                "description": "Other non-working days"
              }
            ],
            "modelRef": null
          }
        ]
      }
    },
    {
      "model88": {
        "name": null,
        "details": null,
        "params": [
          {
            "name": "fromDate",
            "type": "string",
            "subtype": null,
            "description": "Exception from date",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "toDate",
            "type": "string",
            "subtype": null,
            "description": "Exception to date",
            "comment": "Format: yyyy-MM-dd",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": null,
            "modelRef": null
          },
          {
            "name": "exclusionType",
            "type": "string",
            "subtype": null,
            "description": "Type of exception",
            "comment": "Type of User Schedule exception, Enum: Overtime, VacationPTO, OtherNonWorking",
            "optional": true,
            "optionalDefault": null,
            "beta": false,
            "enterprise": false,
            "fields": [
              {
                "value": "Overtime",
                "description": "Additional working days"
              },
              {
                "value": "VacationPTO",
                "description": "Paid vacations"
              },
              {
                "value": "OtherNonWorking",
                "description": "Other non-working days"
              }
            ],
            "modelRef": null
          }
        ]
      }
    }
  ]
}